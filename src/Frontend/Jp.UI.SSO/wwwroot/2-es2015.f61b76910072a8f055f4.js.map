{"version":3,"sources":["./node_modules/angular2-toaster/angular2-toaster.js","./node_modules/angular2-toaster/src/toast.component.d.ts.ToastComponent.html","./node_modules/angular2-toaster/src/toaster-container.component.d.ts.ToasterContainerComponent.html","./src/app/shared/viewModel/default-response.model.ts"],"names":[],"mappings":"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","file":"2-es2015.f61b76910072a8f055f4.js","sourcesContent":["export { ToastComponent } from \"./src/toast.component\";\nexport { ToasterContainerComponent } from \"./src/toaster-container.component\";\nexport { ToasterService } from \"./src/toaster.service\";\nexport { ToasterConfig } from \"./src/toaster-config\";\nexport { BodyOutputType } from \"./src/bodyOutputType\";\nexport { ToasterModule } from \"./src/toaster.module\";\n//# sourceMappingURL=angular2-toaster.js.map","\n        <i class=\"toaster-icon\" [ngClass]=\"iconClass\"></i>\n        <div class=\"toast-content\">\n            <div [ngClass]=\"titleClass\">{{toast.title}}</div>\n            <div [ngClass]=\"messageClass\" [ngSwitch]=\"toast.bodyOutputType\">\n                <div *ngSwitchCase=\"bodyOutputType.Component\" #componentBody></div>\n                <div *ngSwitchCase=\"bodyOutputType.TrustedHtml\" [innerHTML]=\"safeBodyHtml\"></div>\n                <div *ngSwitchCase=\"bodyOutputType.Default\">{{toast.body}}</div>\n            </div>\n        </div>\n        <div class=\"toast-close-button\" *ngIf=\"toast.showCloseButton\" (click)=\"click($event, toast)\"\n            [innerHTML]=\"safeCloseHtml\">\n        </div>","\n        <div id=\"toast-container\" [ngClass]=\"[toasterconfig.positionClass]\">\n            <div toastComp *ngFor=\"let toast of toasts\" class=\"toast\" [toast]=\"toast\"\n                [@toastState]=\"toasterconfig.animation\"\n                [iconClass]=\"toasterconfig.iconClasses[toast.type]\"\n                [titleClass]=\"toasterconfig.titleClass\"\n                [messageClass]=\"toasterconfig.messageClass\"\n                [ngClass]=\"toasterconfig.typeClasses[toast.type]\"\n                (click)=\"click(toast)\" (clickEvent)=\"childClick($event)\"\n                (mouseover)=\"stopTimer(toast)\" (mouseout)=\"restartTimer(toast)\">\n            </div>\n        </div>\n        ","\r\nexport class KeyValuePair {\r\n    constructor(public key: string,\r\n        public value: string) { }\r\n}\r\n\r\nexport class ProblemDetails {\r\n\r\n    public success: boolean;\r\n\r\n    public static GetErrors(err: any): Array<KeyValuePair> {\r\n        try {\r\n            if (err.status === 403 || err.status === 404) {\r\n                return [new KeyValuePair(\"403\", \"Unauthorized Access\")];\r\n            }\r\n\r\n            if (err.error.errors) {\r\n                if (err.error.errors[\"DomainNotification\"]) {\r\n                    return err.error.errors[\"DomainNotification\"].map((element, i) => new KeyValuePair(i, element));\r\n                }\r\n                if (Array.isArray(err.error.errors)) { return err.error.errors.map((element, i) => new KeyValuePair(i, element.message)); }\r\n\r\n                let mappedErrors = [];\r\n                Object.keys(err.error.errors).map((key, index) => {\r\n                    if (Array.isArray(err.error.errors[key]))\r\n                        mappedErrors = mappedErrors.concat(err.error.errors[key].map((a, i) => new KeyValuePair(i, a)));\r\n                    else\r\n                        mappedErrors.push(new KeyValuePair(index.toString(), err.error.errors[key]));\r\n                });\r\n                return mappedErrors;\r\n            }\r\n\r\n\r\n\r\n            return [new KeyValuePair(err.error.status.toString(), \"Unknown error - \" + err.error.type)];\r\n        } catch (error) {\r\n            return [new KeyValuePair(\"500\", \"Unknown error\")];\r\n        }\r\n    }\r\n}\r\n\r\n"],"sourceRoot":""}