{"version":3,"sources":["./src/app/shared/services/role.service.ts","./src/app/shared/services/user.service.ts","./src/app/shared/viewModel/claim.model.ts","./src/app/shared/viewModel/role.model.ts"],"names":[],"mappings":"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","file":"common-es2015.e7c02526f53a4242eb29.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { UserProfile } from '@shared/viewModel/userProfile.model';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Role } from '../viewModel/role.model';\r\n\r\n@Injectable()\r\nexport class RoleService {\r\n\r\n    endpoint: string;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.endpoint = environment.ResourceServer + \"api/roles\";\r\n    }\r\n\r\n\r\n    public getAvailableRoles(): Observable<Role[]> {\r\n        return this.http.get<Role[]>(`${this.endpoint}`);\r\n    }\r\n\r\n    public remove(name: string): Observable<void> {\r\n        return this.http.delete<void>(`${this.endpoint}/${name}`);\r\n    }\r\n\r\n    public getRoleDetails(name: string): Observable<Role> {\r\n        return this.http.get<Role>(`${this.endpoint}/${name}`);\r\n    }\r\n\r\n    public update(name: string, model: Role): Observable<void> {\r\n        return this.http.put<void>(`${this.endpoint}/${name}`, model);\r\n    }\r\n\r\n    public removeUserFromRole(user: string, role: string): Observable<void> {\r\n        return this.http.delete<void>(`${this.endpoint}/${role}/${user}`);\r\n    }\r\n\r\n    public save(model: Role): Observable<Role> {\r\n        return this.http.post<Role>(`${this.endpoint}`, model);\r\n    }\r\n\r\n    public getUsersFromRole(role: string): Observable<UserProfile[]> {\r\n        return this.http.get<UserProfile[]>(`${this.endpoint}/${role}/users`);\r\n    }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { AdminAddNewUser } from '@shared/viewModel/admin-add-new-user.model';\r\nimport { Claim } from '@shared/viewModel/claim.model';\r\nimport { ListOf } from '@shared/viewModel/list-of.model';\r\nimport { Role, SaveRole } from '@shared/viewModel/role.model';\r\nimport { Operation } from 'fast-json-patch';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { EventHistoryData } from '../viewModel/event-history-data.model';\r\nimport { ResetPassword } from '../viewModel/reset-password.model';\r\nimport { UserLogin } from '../viewModel/user-login.model';\r\nimport { ListOfUsers, UserProfile } from '../viewModel/userProfile.model';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n\r\n    endpoint: string;\r\n    endpointSignUp: string;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.endpoint = environment.ResourceServer + \"api/admin/users\";\r\n        this.endpointSignUp = environment.ResourceServer + \"api/sign-up\";\r\n    }\r\n\r\n\r\n    public getUsers(quantity: number, page: number): Observable<ListOfUsers> {\r\n        return this.http.get<ListOfUsers>(`${this.endpoint}?limit=${quantity}&offset=${(page - 1) * quantity}`);\r\n    }\r\n\r\n    public findUsers(text: string, quantity: number, page: number): Observable<ListOfUsers> {\r\n        return this.http.get<ListOfUsers>(`${this.endpoint}?limit=${quantity}&offset=${(page - 1) * quantity}&search=${encodeURI(text)}`);\r\n    }\r\n\r\n    public getDetails(username: string): Observable<UserProfile> {\r\n        return this.http.get<UserProfile>(`${this.endpoint}/${username}`);\r\n    }\r\n\r\n    public update(username: string, updateCommand: UserProfile): Observable<boolean> {\r\n        return this.http.put<boolean>(`${this.endpoint}/${username}`, updateCommand);\r\n    }\r\n\r\n    public patch(username: string, patch: Operation[]): Observable<boolean> {\r\n        return this.http.patch<boolean>(`${this.endpoint}/${username}`, patch);\r\n    }\r\n\r\n    public save(model: AdminAddNewUser): Observable<UserProfile> {\r\n        return this.http.post<UserProfile>(`${this.endpoint}`, model);\r\n    }\r\n\r\n    public remove(username: string): Observable<void> {\r\n        return this.http.delete<void>(`${this.endpoint}/${username}`);\r\n    }\r\n\r\n    public getUserClaims(userName: string): Observable<Claim[]> {\r\n        return this.http.get<Claim[]>(`${this.endpoint}/${userName}/claims`);\r\n    }\r\n\r\n    public removeClaim(username: string, type: string): Observable<void> {\r\n        return this.http.delete<void>(`${this.endpoint}/${username}/claims/${type}`);\r\n    }\r\n\r\n    public saveClaim(username, model: Claim): Observable<Claim> {\r\n        return this.http.post<Claim>(`${this.endpoint}/${username}/claims`, model);\r\n    }\r\n\r\n    public getUserRoles(userName: string): Observable<Role[]> {\r\n        return this.http.get<Role[]>(`${this.endpoint}/${userName}/roles`);\r\n    }\r\n\r\n    public removeRole(username: string, role: string): Observable<void> {\r\n        return this.http.delete<void>(`${this.endpoint}/${username}/roles/${role}`);\r\n    }\r\n\r\n    public saveRole(username: string, model: SaveRole): Observable<boolean> {\r\n        return this.http.post<boolean>(`${this.endpoint}/${username}/roles`, model);\r\n    }\r\n\r\n    public getUserLogins(username: string): Observable<UserLogin[]> {\r\n        return this.http.get<UserLogin[]>(`${this.endpoint}/${username}/logins`);\r\n    }\r\n\r\n    public removeLogin(userName: string, loginProvider: string, providerKey: string): any {\r\n        return this.http.delete<void>(`${this.endpoint}/${userName}/logins?loginProvider=${loginProvider}&providerKey=${providerKey}`);\r\n    }\r\n\r\n    public checkUserName(userName: string): Observable<boolean> {\r\n        return this.http.get<boolean>(`${this.endpointSignUp}/check-username/${userName}`);\r\n    }\r\n\r\n    public checkEmail(email: string): Observable<boolean> {\r\n        return this.http.get<boolean>(`${this.endpointSignUp}/check-email/${email}`);\r\n    }\r\n\r\n    public resetPassword(username: string, resetPassword: ResetPassword): Observable<boolean> {\r\n        return this.http.put<boolean>(`${this.endpoint}/${username}/password`, resetPassword);\r\n    }\r\n\r\n    public showEvents(username: string, quantity: number, page: number): Observable<ListOf<EventHistoryData>> {\r\n        return this.http.get<ListOf<EventHistoryData>>(`${this.endpoint}/${username}/logs?limit=${quantity}&offset=${(page - 1) * quantity}`);\r\n    }\r\n    \r\n    public searchEvents(username: string, text: string, quantity: number, page: number): Observable<ListOf<EventHistoryData>> {\r\n        return this.http.get<ListOf<EventHistoryData>>(`${this.endpoint}/${username}/logs?limit=${quantity}&offset=${(page - 1) * quantity}&search=${encodeURI(text)}`);\r\n    }\r\n}\r\n","export class Claim {\r\n    id: number;\r\n    type: string;\r\n    value: string;\r\n}\r\n","export class Role {\r\n    public name: string;\r\n}\r\n\r\nexport class SaveRole{\r\n    public role: string;\r\n}"],"sourceRoot":""}