{"version":3,"sources":["./src/app/shared/services/role.service.ts","./src/app/shared/services/role.service.ts.pre-build-optimizer.js","./src/app/shared/services/user.service.ts","./src/app/shared/services/user.service.ts.pre-build-optimizer.js","./src/app/shared/viewModel/claim.model.ts","./src/app/shared/viewModel/claim.model.ts.pre-build-optimizer.js","./src/app/shared/viewModel/role.model.ts","./src/app/shared/viewModel/role.model.ts.pre-build-optimizer.js"],"names":[],"mappings":"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","file":"common-es5.2badd592bdd881e0562d.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { UserProfile } from '@shared/viewModel/userProfile.model';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Role } from '../viewModel/role.model';\r\n\r\n@Injectable()\r\nexport class RoleService {\r\n\r\n    endpoint: string;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.endpoint = environment.ResourceServer + \"api/roles\";\r\n    }\r\n\r\n\r\n    public getAvailableRoles(): Observable<Role[]> {\r\n        return this.http.get<Role[]>(`${this.endpoint}`);\r\n    }\r\n\r\n    public remove(name: string): Observable<void> {\r\n        return this.http.delete<void>(`${this.endpoint}/${name}`);\r\n    }\r\n\r\n    public getRoleDetails(name: string): Observable<Role> {\r\n        return this.http.get<Role>(`${this.endpoint}/${name}`);\r\n    }\r\n\r\n    public update(name: string, model: Role): Observable<void> {\r\n        return this.http.put<void>(`${this.endpoint}/${name}`, model);\r\n    }\r\n\r\n    public removeUserFromRole(user: string, role: string): Observable<void> {\r\n        return this.http.delete<void>(`${this.endpoint}/${role}/${user}`);\r\n    }\r\n\r\n    public save(model: Role): Observable<Role> {\r\n        return this.http.post<Role>(`${this.endpoint}`, model);\r\n    }\r\n\r\n    public getUsersFromRole(role: string): Observable<UserProfile[]> {\r\n        return this.http.get<UserProfile[]>(`${this.endpoint}/${role}/users`);\r\n    }\r\n\r\n}\r\n","import { environment } from '@env/environment';\nvar RoleService = /** @class */ (function () {\n    function RoleService(http) {\n        this.http = http;\n        this.endpoint = environment.ResourceServer + \"api/roles\";\n    }\n    RoleService.prototype.getAvailableRoles = function () {\n        return this.http.get(\"\" + this.endpoint);\n    };\n    RoleService.prototype.remove = function (name) {\n        return this.http.delete(this.endpoint + \"/\" + name);\n    };\n    RoleService.prototype.getRoleDetails = function (name) {\n        return this.http.get(this.endpoint + \"/\" + name);\n    };\n    RoleService.prototype.update = function (name, model) {\n        return this.http.put(this.endpoint + \"/\" + name, model);\n    };\n    RoleService.prototype.removeUserFromRole = function (user, role) {\n        return this.http.delete(this.endpoint + \"/\" + role + \"/\" + user);\n    };\n    RoleService.prototype.save = function (model) {\n        return this.http.post(\"\" + this.endpoint, model);\n    };\n    RoleService.prototype.getUsersFromRole = function (role) {\n        return this.http.get(this.endpoint + \"/\" + role + \"/users\");\n    };\n    return RoleService;\n}());\nexport { RoleService };\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { AdminAddNewUser } from '@shared/viewModel/admin-add-new-user.model';\r\nimport { Claim } from '@shared/viewModel/claim.model';\r\nimport { ListOf } from '@shared/viewModel/list-of.model';\r\nimport { Role, SaveRole } from '@shared/viewModel/role.model';\r\nimport { Operation } from 'fast-json-patch';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { EventHistoryData } from '../viewModel/event-history-data.model';\r\nimport { ResetPassword } from '../viewModel/reset-password.model';\r\nimport { UserLogin } from '../viewModel/user-login.model';\r\nimport { ListOfUsers, UserProfile } from '../viewModel/userProfile.model';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n\r\n    endpoint: string;\r\n    endpointSignUp: string;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.endpoint = environment.ResourceServer + \"api/admin/users\";\r\n        this.endpointSignUp = environment.ResourceServer + \"api/sign-up\";\r\n    }\r\n\r\n\r\n    public getUsers(quantity: number, page: number): Observable<ListOfUsers> {\r\n        return this.http.get<ListOfUsers>(`${this.endpoint}?limit=${quantity}&offset=${(page - 1) * quantity}`);\r\n    }\r\n\r\n    public findUsers(text: string, quantity: number, page: number): Observable<ListOfUsers> {\r\n        return this.http.get<ListOfUsers>(`${this.endpoint}?limit=${quantity}&offset=${(page - 1) * quantity}&search=${encodeURI(text)}`);\r\n    }\r\n\r\n    public getDetails(username: string): Observable<UserProfile> {\r\n        return this.http.get<UserProfile>(`${this.endpoint}/${username}`);\r\n    }\r\n\r\n    public update(username: string, updateCommand: UserProfile): Observable<boolean> {\r\n        return this.http.put<boolean>(`${this.endpoint}/${username}`, updateCommand);\r\n    }\r\n\r\n    public patch(username: string, patch: Operation[]): Observable<boolean> {\r\n        return this.http.patch<boolean>(`${this.endpoint}/${username}`, patch);\r\n    }\r\n\r\n    public save(model: AdminAddNewUser): Observable<UserProfile> {\r\n        return this.http.post<UserProfile>(`${this.endpoint}`, model);\r\n    }\r\n\r\n    public remove(username: string): Observable<void> {\r\n        return this.http.delete<void>(`${this.endpoint}/${username}`);\r\n    }\r\n\r\n    public getUserClaims(userName: string): Observable<Claim[]> {\r\n        return this.http.get<Claim[]>(`${this.endpoint}/${userName}/claims`);\r\n    }\r\n\r\n    public removeClaim(username: string, type: string): Observable<void> {\r\n        return this.http.delete<void>(`${this.endpoint}/${username}/claims/${type}`);\r\n    }\r\n\r\n    public saveClaim(username, model: Claim): Observable<Claim> {\r\n        return this.http.post<Claim>(`${this.endpoint}/${username}/claims`, model);\r\n    }\r\n\r\n    public getUserRoles(userName: string): Observable<Role[]> {\r\n        return this.http.get<Role[]>(`${this.endpoint}/${userName}/roles`);\r\n    }\r\n\r\n    public removeRole(username: string, role: string): Observable<void> {\r\n        return this.http.delete<void>(`${this.endpoint}/${username}/roles/${role}`);\r\n    }\r\n\r\n    public saveRole(username: string, model: SaveRole): Observable<boolean> {\r\n        return this.http.post<boolean>(`${this.endpoint}/${username}/roles`, model);\r\n    }\r\n\r\n    public getUserLogins(username: string): Observable<UserLogin[]> {\r\n        return this.http.get<UserLogin[]>(`${this.endpoint}/${username}/logins`);\r\n    }\r\n\r\n    public removeLogin(userName: string, loginProvider: string, providerKey: string): any {\r\n        return this.http.delete<void>(`${this.endpoint}/${userName}/logins?loginProvider=${loginProvider}&providerKey=${providerKey}`);\r\n    }\r\n\r\n    public checkUserName(userName: string): Observable<boolean> {\r\n        return this.http.get<boolean>(`${this.endpointSignUp}/check-username/${userName}`);\r\n    }\r\n\r\n    public checkEmail(email: string): Observable<boolean> {\r\n        return this.http.get<boolean>(`${this.endpointSignUp}/check-email/${email}`);\r\n    }\r\n\r\n    public resetPassword(username: string, resetPassword: ResetPassword): Observable<boolean> {\r\n        return this.http.put<boolean>(`${this.endpoint}/${username}/password`, resetPassword);\r\n    }\r\n\r\n    public showEvents(username: string, quantity: number, page: number): Observable<ListOf<EventHistoryData>> {\r\n        return this.http.get<ListOf<EventHistoryData>>(`${this.endpoint}/${username}/logs?limit=${quantity}&offset=${(page - 1) * quantity}`);\r\n    }\r\n    \r\n    public searchEvents(username: string, text: string, quantity: number, page: number): Observable<ListOf<EventHistoryData>> {\r\n        return this.http.get<ListOf<EventHistoryData>>(`${this.endpoint}/${username}/logs?limit=${quantity}&offset=${(page - 1) * quantity}&search=${encodeURI(text)}`);\r\n    }\r\n}\r\n","import { environment } from '@env/environment';\nvar UserService = /** @class */ (function () {\n    function UserService(http) {\n        this.http = http;\n        this.endpoint = environment.ResourceServer + \"api/admin/users\";\n        this.endpointSignUp = environment.ResourceServer + \"api/sign-up\";\n    }\n    UserService.prototype.getUsers = function (quantity, page) {\n        return this.http.get(this.endpoint + \"?limit=\" + quantity + \"&offset=\" + (page - 1) * quantity);\n    };\n    UserService.prototype.findUsers = function (text, quantity, page) {\n        return this.http.get(this.endpoint + \"?limit=\" + quantity + \"&offset=\" + (page - 1) * quantity + \"&search=\" + encodeURI(text));\n    };\n    UserService.prototype.getDetails = function (username) {\n        return this.http.get(this.endpoint + \"/\" + username);\n    };\n    UserService.prototype.update = function (username, updateCommand) {\n        return this.http.put(this.endpoint + \"/\" + username, updateCommand);\n    };\n    UserService.prototype.patch = function (username, patch) {\n        return this.http.patch(this.endpoint + \"/\" + username, patch);\n    };\n    UserService.prototype.save = function (model) {\n        return this.http.post(\"\" + this.endpoint, model);\n    };\n    UserService.prototype.remove = function (username) {\n        return this.http.delete(this.endpoint + \"/\" + username);\n    };\n    UserService.prototype.getUserClaims = function (userName) {\n        return this.http.get(this.endpoint + \"/\" + userName + \"/claims\");\n    };\n    UserService.prototype.removeClaim = function (username, type) {\n        return this.http.delete(this.endpoint + \"/\" + username + \"/claims/\" + type);\n    };\n    UserService.prototype.saveClaim = function (username, model) {\n        return this.http.post(this.endpoint + \"/\" + username + \"/claims\", model);\n    };\n    UserService.prototype.getUserRoles = function (userName) {\n        return this.http.get(this.endpoint + \"/\" + userName + \"/roles\");\n    };\n    UserService.prototype.removeRole = function (username, role) {\n        return this.http.delete(this.endpoint + \"/\" + username + \"/roles/\" + role);\n    };\n    UserService.prototype.saveRole = function (username, model) {\n        return this.http.post(this.endpoint + \"/\" + username + \"/roles\", model);\n    };\n    UserService.prototype.getUserLogins = function (username) {\n        return this.http.get(this.endpoint + \"/\" + username + \"/logins\");\n    };\n    UserService.prototype.removeLogin = function (userName, loginProvider, providerKey) {\n        return this.http.delete(this.endpoint + \"/\" + userName + \"/logins?loginProvider=\" + loginProvider + \"&providerKey=\" + providerKey);\n    };\n    UserService.prototype.checkUserName = function (userName) {\n        return this.http.get(this.endpointSignUp + \"/check-username/\" + userName);\n    };\n    UserService.prototype.checkEmail = function (email) {\n        return this.http.get(this.endpointSignUp + \"/check-email/\" + email);\n    };\n    UserService.prototype.resetPassword = function (username, resetPassword) {\n        return this.http.put(this.endpoint + \"/\" + username + \"/password\", resetPassword);\n    };\n    UserService.prototype.showEvents = function (username, quantity, page) {\n        return this.http.get(this.endpoint + \"/\" + username + \"/logs?limit=\" + quantity + \"&offset=\" + (page - 1) * quantity);\n    };\n    UserService.prototype.searchEvents = function (username, text, quantity, page) {\n        return this.http.get(this.endpoint + \"/\" + username + \"/logs?limit=\" + quantity + \"&offset=\" + (page - 1) * quantity + \"&search=\" + encodeURI(text));\n    };\n    return UserService;\n}());\nexport { UserService };\n","export class Claim {\r\n    id: number;\r\n    type: string;\r\n    value: string;\r\n}\r\n","var Claim = /** @class */ (function () {\n    function Claim() {\n    }\n    return Claim;\n}());\nexport { Claim };\n","export class Role {\r\n    public name: string;\r\n}\r\n\r\nexport class SaveRole{\r\n    public role: string;\r\n}","var Role = /** @class */ (function () {\n    function Role() {\n    }\n    return Role;\n}());\nexport { Role };\nvar SaveRole = /** @class */ (function () {\n    function SaveRole() {\n    }\n    return SaveRole;\n}());\nexport { SaveRole };\n"],"sourceRoot":""}