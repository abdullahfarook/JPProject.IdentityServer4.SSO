{"version":3,"sources":["./src/app/panel/users/add/user-add.component.html","./src/app/panel/users/add/user-add.component.ts","./src/app/panel/users/claims/user-claims.component.html","./src/app/panel/users/claims/user-claims.component.ts","./src/app/panel/users/edit/user-edit.component.html","./src/app/panel/users/edit/user-edit.component.ts","./src/app/panel/users/events/user-events.component.html","./src/app/panel/users/events/user-events.component.ts","./src/app/panel/users/list/user-list.component.html","./src/app/panel/users/list/user-list.component.ts","./src/app/panel/users/logins/user-logins.component.html","./src/app/panel/users/logins/user-logins.component.ts","./src/app/panel/users/roles/user-roles.component.html","./src/app/panel/users/roles/user-roles.component.ts","./src/app/panel/users/user.module.ts","./src/app/shared/components/loading-spinner/loading-spinner.component.ts.LoadingSpinnerComponent.html","./src/app/shared/components/loading-spinner/loading-spinner.component.ts","./src/app/shared/validators/equal-to.validator.ts","./src/app/shared/validators/index.ts","./src/app/shared/validators/password.validator.ts","./src/app/shared/viewModel/reset-password.model.ts"],"names":[],"mappings":"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","file":"10-es5.af8fff05c638c36232b4.js","sourcesContent":["<div class=\"content-heading\">\r\n    <div>\r\n        👨‍👩‍👧‍👦 &nbsp;&nbsp;{{ 'general.users' | translate }}\r\n        <small><b> {{ 'users.description' | translate }}.</b></small>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"card card-default\">\r\n    <div class=\"card-body\">\r\n        <a [routerLink]=\"[ '/users' ]\" class=\"btn btn-outline-primary\">{{ 'general.goback' | translate }}</a>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"errors.length > 0\">\r\n    <alert type=\"danger\">\r\n        <div *ngFor=\"let error of errors; let i = index\"><strong>{{i+1}}</strong> {{error}}</div>\r\n    </alert>\r\n</div>\r\n\r\n<app-loading *ngIf=\"showButtonLoading\"></app-loading>\r\n<div class=\"card card-default\" [hidden]=\"showButtonLoading\">\r\n    <div class=\"card-header\">\r\n        <h3>{{ 'users.new-user' | translate }}</h3>\r\n    </div>\r\n    <div class=\"card-body\" [formGroup]=\"registerForm\">\r\n\r\n        <!--Input - text -->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'users.edit.userName-tooltip' | translate\">{{\r\n                    'users.edit.userName' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-8\">\r\n                    <input class=\"form-control\" autocomplete=\"username\" [placeholder]=\"'users.edit.userName-tooltip' | translate\" [formControl]=\"registerForm.controls.userName\" required/>\r\n                    <app-input-validation [control]=\"registerForm.controls.userName\" [errorMsgs]=\"getErrorMessages() | async\"></app-input-validation>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <!--Input - text -->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'users.edit.name-tooltip' | translate\">{{\r\n                    'users.edit.name' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-8\">\r\n                    <input class=\"form-control\" autocomplete=\"name\" [placeholder]=\"'users.edit.name-tooltip' | translate\" [formControl]=\"registerForm.controls.name\" />\r\n                    <app-input-validation [control]=\"registerForm.controls.name\" [errorMsgs]=\"getErrorMessages() | async\"></app-input-validation>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <!--Input - text -->\r\n        <fieldset>\r\n            <div class=\" form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'users.edit.email-tooltip' | translate\">{{\r\n                    'users.edit.email' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-8\">\r\n                    <input class=\"form-control\" autocomplete=\"model-email\" [placeholder]=\"'users.edit.email-tooltip' | translate\" [formControl]=\"registerForm.controls.email\" required />\r\n                    <app-input-validation [control]=\"registerForm.controls.email\" [errorMsgs]=\"getErrorMessages() | async\"></app-input-validation>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <!--Input - text -->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\">{{\r\n                    'users.edit.password' | translate }}</label>\r\n                <div class=\"col-xl-8\">\r\n                    <input class=\"form-control\" autocomplete=\"current-password\" type=\"password\" [formControl]=\"registerForm.controls.password\" />\r\n                    <app-input-validation [control]=\"registerForm.controls.password\" [errorMsgs]=\"getErrorMessages() | async\"></app-input-validation>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <!--Input - text -->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\">{{\r\n                    'users.edit.confirmPassword' | translate }}</label>\r\n                <div class=\"col-xl-8\">\r\n                    <input class=\"form-control\" autocomplete=\"current-password\" [formControl]=\"registerForm.controls.confirmPassword\" type=\"password\" />\r\n                    <app-input-validation [control]=\"registerForm.controls.confirmPassword\" [errorMsgs]=\"getErrorMessages() | async\"></app-input-validation>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <!--Checkbox-->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <div class=\"col-xl-4\">\r\n                    <label class=\"col-form-label\">{{ 'users.edit.confirmEmail' | translate }}\r\n                </label>&nbsp;\r\n                    <button type=\"button\" class=\"btn btn-xs btn-info\" [popover]=\"'users.edit.confirmEmail-tooltip' | translate\" [popoverTitle]=\" 'users.edit.confirmEmail' | translate\" placement=\"top\" container=\"body\" [adaptivePosition]=\"false\">\r\n                    <i class=\"fa fa-comment-dots\"></i>\r\n                </button>\r\n                </div>\r\n                <div class=\"col-xl-8\">\r\n                    <label class=\"switch m-0\">\r\n                    <input type=\"checkbox\"  [formControl]=\"registerForm.controls.confirmEmail\" />\r\n                    <span></span>\r\n                </label>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        <button class=\"mb-1 btn btn-primary\" (click)=\"save()\" type=\"button\">\r\n            <ng-container *ngIf=\"!showButtonLoading\">{{ 'general.add' | translate }}</ng-container>\r\n            <loading-spinner *ngIf=\"showButtonLoading\" [whiteStroke]=\"true\" [width]=\"20\" [height]=\"20\" ></loading-spinner></button>\r\n        <a class=\"mb-1 btn btn-secondary\" [routerLink]=\"['/users']\">Cancel</a>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"errors.length> 0\">\r\n    <alert type=\"danger\">\r\n        <div *ngFor=\"let error of errors; let i = index\"><strong>{{i+1}}</strong> {{error}}</div>\r\n    </alert>\r\n</div>\r\n<toaster-container [toasterconfig]=\"toasterconfig\"></toaster-container>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslatorService } from '@core/translator/translator.service';\r\nimport { FormControl, FormGroup, Validators } from '@ng-stack/forms';\r\nimport { UserService } from '@shared/services/user.service';\r\nimport { EqualToValidator, PasswordValidator } from '@shared/validators';\r\nimport { FormUtil } from '@shared/validators/form.utils';\r\nimport { AdminAddNewUser } from '@shared/viewModel/admin-add-new-user.model';\r\nimport { ProblemDetails } from '@shared/viewModel/default-response.model';\r\nimport { UserProfile } from '@shared/viewModel/userProfile.model';\r\nimport { ToasterConfig, ToasterService } from 'angular2-toaster';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { debounceTime, share, switchMap } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n    selector: \"app-user-add\",\r\n    templateUrl: \"./user-add.component.html\",\r\n    styleUrls: [\"./user-add.component.scss\"],\r\n    providers: [UserService],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class UserAddComponent implements OnInit {\r\n\r\n    readonly registerForm = new FormGroup<AdminAddNewUser>({\r\n        password: new FormControl<string>(null, [Validators.required, PasswordValidator.validator]),\r\n        confirmPassword: new FormControl<string>(null, [Validators.required, EqualToValidator.validator('password')]),\r\n        email: new FormControl<string>(null, [Validators.required, Validators.email]),\r\n        name: new FormControl<string>(null, [Validators.minLength(2), Validators.required]),\r\n        userName: new FormControl<string>(null, [Validators.required]),\r\n        phoneNumber: new FormControl<string>(null, null),\r\n        confirmEmail: new FormControl<boolean>(null, null)\r\n    });\r\n\r\n    public errors: Array<string>;\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({\r\n        positionClass: 'toast-top-right',\r\n        showCloseButton: true\r\n    });\r\n    public bsConfig = {\r\n        containerClass: 'theme-angle'\r\n    };\r\n    public showButtonLoading: boolean = false;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        public translator: TranslatorService,\r\n        private userService: UserService,\r\n        public toasterService: ToasterService) { }\r\n\r\n    public ngOnInit() {\r\n        this.errors = [];\r\n        this.showButtonLoading = false;\r\n       \r\n        this.registerForm.controls.email.valueChanges.pipe(debounceTime(500))\r\n            .pipe(switchMap(a => this.userService.checkEmail(a)))\r\n            .subscribe((emailExist: boolean) => {\r\n                if (emailExist)\r\n                    this.registerForm.controls.email.setErrors({ 'emailExist': true });\r\n            });\r\n\r\n\r\n        this.registerForm.controls.userName.valueChanges.pipe(debounceTime(500))\r\n            .pipe(switchMap(a => this.userService.checkUserName(a)))\r\n            .subscribe((userExist: boolean) => {\r\n                if (userExist)\r\n                    this.registerForm.controls.userName.setErrors({ 'usernameExist': true });\r\n            });\r\n    }\r\n\r\n    public save() {\r\n\r\n        if (!this.validateForm(this.registerForm)) {\r\n            return;\r\n        }\r\n\r\n        this.showButtonLoading = true;\r\n        this.errors = [];\r\n        this.userService.save(this.registerForm.value).subscribe(\r\n            registerResult => {\r\n                if (registerResult) {\r\n                    this.showSuccessMessage();\r\n                    this.router.navigate([\"/users\", this.registerForm.value.userName, 'edit']);\r\n                }\r\n            },\r\n            err => {\r\n                this.errors = ProblemDetails.GetErrors(err).map(a => a.value);\r\n                this.showButtonLoading = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    private validateForm(form) {\r\n        if (form.invalid) {\r\n            FormUtil.touchForm(form);\r\n            FormUtil.dirtyForm(form);\r\n\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public getErrorMessages(): Observable<any> {\r\n        return this.translator.translate.get('validations').pipe(share());\r\n    }\r\n\r\n    public showSuccessMessage() {\r\n        this.translator.translate.get('toasterMessages').subscribe(a => {\r\n            this.toasterService.pop(\"success\", a[\"title-success\"], a[\"message-success\"]);\r\n        });\r\n    }\r\n\r\n}\r\n","<div class=\"content-heading\">\r\n    <div>\r\n        💻 {{ 'general.users' | translate }} - <b>Claims</b>\r\n        <small><b [innerHTML]=\"'client.ClaimDescription' | translate\"></b></small>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"card card-default\">\r\n    <div class=\"card-body\">\r\n        <a [routerLink]=\"[ '/users', userName, 'edit']\" class=\"btn btn-outline-primary\">{{ 'general.goback' | translate }}</a>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"errors.length > 0\">\r\n    <alert type=\"danger\">\r\n        <div *ngFor=\"let error of errors; let i = index\"><strong>{{i+1}}</strong> {{error}}</div>\r\n    </alert>\r\n</div>\r\n\r\n<app-loading *ngIf=\"model == null || showButtonLoading\"></app-loading>\r\n\r\n<div class=\"card card-default\" *ngIf=\"claims && claims.length > 0\">\r\n    <div class=\"card-header\">\r\n        <h3>{{ userName }}</h3>\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>{{ 'users.claims.type' | translate }}</th>\r\n                    <th>{{ 'users.claims.value' | translate }}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let claim of claims\">\r\n                    <td><button class=\"btn btn-danger btn-xs\" (click)=\"remove(claim.type)\"><i class=\"fa fa-times\"></i></button></td>\r\n                    <td>{{claim.type}}</td>\r\n                    <td>{{claim.value}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"card card-default\">\r\n    <div class=\"card-header\">\r\n        <h3>{{ userName }}</h3>\r\n    </div>\r\n    <div class=\"card-body\">\r\n\r\n        <!--Select with tags-->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-3 col-form-label\">{{ 'users.claims.type' | translate }} <i class=\"fa fa-comment-dots\"\r\n                        placement=\"top\" [tooltip]=\"'users.claims.type-tooltip' | translate\"></i></label>\r\n                <div class=\"col-xl-9\">\r\n                        <input class=\"form-control\" autocomplete=\"claims-type\" [placeholder]=\"'users.claims.type-tooltip' | translate\"\r\n                        [(ngModel)]=\"model.type\" />\r\n                </div>\r\n                <div class=\"col-xl-9 offset-3\">\r\n                    <small>Sugestions</small>\r\n                    <br>\r\n                    <button class=\"btn btn-xs btn-outline-info\" *ngFor=\"let item of standardClaims\" (click)=\"selectType(item)\">{{item}} <i class=\"fa fa-plus-circle\"></i>&nbsp;</button>\r\n\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n\r\n        <!--Input - text -->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-3 col-form-label\">{{ 'users.claims.value' | translate }} <i class=\"fa fa-comment-dots\"\r\n                        placement=\"top\" [tooltip]=\"'users.claims.value-tooltip' | translate\"></i></label>\r\n                <div class=\"col-xl-9\">\r\n                    <input class=\"form-control\" autocomplete=\"claims-value\" [placeholder]=\"'users.claims.value-tooltip' | translate\"\r\n                        [(ngModel)]=\"model.value\" />\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        <button class=\"mb-1 btn btn-primary\" (click)=\"save()\" type=\"button\">Save</button>\r\n        <a class=\"mb-1 btn btn-secondary\" [routerLink]=\"['/users', userName, 'edit']\">Cancel</a>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"errors.length > 0\">\r\n    <alert type=\"danger\">\r\n        <div *ngFor=\"let error of errors; let i = index\"><strong>{{i+1}}</strong> {{error}}</div>\r\n    </alert>\r\n</div>\r\n<toaster-container [toasterconfig]=\"toasterconfig\"></toaster-container>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslatorService } from '@core/translator/translator.service';\r\nimport { UserService } from '@shared/services/user.service';\r\nimport { Claim } from '@shared/viewModel/claim.model';\r\nimport { ProblemDetails } from '@shared/viewModel/default-response.model';\r\nimport { StandardClaims } from '@shared/viewModel/standard-claims.model';\r\nimport { ToasterConfig, ToasterService } from 'angular2-toaster';\r\nimport { Observable } from 'rxjs';\r\nimport { debounceTime, flatMap, map, tap } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n    selector: \"app-user-claim\",\r\n    templateUrl: \"./user-claims.component.html\",\r\n    styleUrls: [\"./user-claims.component.scss\"],\r\n    providers: [UserService],\r\n})\r\nexport class UserClaimsComponent implements OnInit {\r\n\r\n    public errors: Array<string>;\r\n    public claimsSuggested: Array<string>;\r\n    public model: Claim;\r\n    public claims: Claim[];\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({\r\n        positionClass: 'toast-top-right',\r\n        showCloseButton: true\r\n    });\r\n    public showButtonLoading: boolean;\r\n    public userName: string;\r\n    public bsConfig = {\r\n        containerClass: 'theme-angle'\r\n    };\r\n    public standardClaims: string[];\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        public translator: TranslatorService,\r\n        private userService: UserService,\r\n        public toasterService: ToasterService) { }\r\n\r\n    public ngOnInit() {\r\n        this.route.params.pipe(tap(p => this.userName = p[\"username\"])).pipe(map(p => p[\"username\"])).pipe(flatMap(m => this.userService.getUserClaims(m.toString()))).subscribe(result => this.claims = result);\r\n        this.errors = [];\r\n        this.model = new Claim();\r\n        this.showButtonLoading = false;\r\n        this.standardClaims = StandardClaims.claims;\r\n    }\r\n\r\n    public showSuccessMessage() {\r\n        this.translator.translate.get('toasterMessages').subscribe(a => {\r\n            this.toasterService.pop(\"success\", a[\"title-success\"], a[\"message-success\"]);\r\n        });\r\n    }\r\n\r\n    public selectType(type: string) {\r\n        this.model.type = type;\r\n    }\r\n\r\n\r\n    public remove(type: string) {\r\n\r\n        this.showButtonLoading = true;\r\n        this.errors = [];\r\n        this.userService.removeClaim(this.userName, type).subscribe(\r\n            () => {\r\n                this.showSuccessMessage();\r\n                this.loadClaims();\r\n                this.showButtonLoading = false;\r\n            },\r\n            err => {\r\n                this.errors = ProblemDetails.GetErrors(err).map(a => a.value);\r\n                this.showButtonLoading = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadClaims(): void {\r\n        this.userService.getUserClaims(this.userName).subscribe(c => this.claims = c);\r\n    }\r\n\r\n    public save() {\r\n        this.showButtonLoading = true;\r\n        this.errors = [];\r\n        this.userService.saveClaim(this.userName, this.model).subscribe(\r\n            registerResult => {\r\n                if (registerResult) {\r\n                    this.showSuccessMessage();\r\n                    this.loadClaims();\r\n                    this.model = new Claim();\r\n                }\r\n                this.showButtonLoading = false;\r\n            },\r\n            err => {\r\n                this.errors = ProblemDetails.GetErrors(err).map(a => a.value);\r\n                this.showButtonLoading = false;\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n}\r\n","<div class=\"content-heading\">\r\n    <div>\r\n        👨‍👩‍👧‍👦 &nbsp;&nbsp;{{ 'general.users' | translate }}\r\n        <small><b> {{ 'users.description' | translate }}.</b></small>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"card card-default\">\r\n    <div class=\"card-body\">\r\n        <button (click)=\"showChangeData()\" class=\"btn btn-outline-info\">{{ 'users.edit.user-data' |\r\n            translate }}</button>&nbsp;\r\n        <button (click)=\"showChangePass()\" class=\"btn btn-outline-warning\">{{ 'users.edit.change-password' |\r\n            translate }}</button>\r\n    </div>\r\n</div>\r\n\r\n<app-loading *ngIf=\"showButtonLoading\"></app-loading>\r\n\r\n<div *ngIf=\"errors.length > 0\">\r\n    <alert type=\"danger\">\r\n        <div *ngFor=\"let error of errors; let i = index\"><strong>{{i+1}}</strong> {{error}}</div>\r\n    </alert>\r\n</div>\r\n\r\n<!-- BEGIN CHANGE PASSWORD FORM -->\r\n<div *ngIf=\"shouldChangePass\" [hidden]=\"showButtonLoading\">\r\n    <div class=\"card card-default\">\r\n        <div class=\"card-body\">\r\n            <!--Input - text -->\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-xl-3 col-form-label\" placement=\"top\" [tooltip]=\"'users.edit.password-tooltip' | translate\">{{\r\n                        'users.edit.password' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-9\">\r\n                        <input class=\"form-control\" type=\"password\" autocomplete=\"new-password\" [(ngModel)]=\"resetPassword.password\" />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <!--Input - text -->\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-xl-3 col-form-label\" placement=\"top\" [tooltip]=\"'users.edit.confirmPassword-tooltip' | translate\">{{\r\n                        'users.edit.confirmPassword' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-9\">\r\n                        <input class=\"form-control\" type=\"password\" autocomplete=\"new-password\" [(ngModel)]=\"resetPassword.confirmPassword\" />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n            <button class=\"mb-1 btn btn-primary\" (click)=\"resetPass()\" type=\"button\">Save</button>\r\n            <a class=\"mb-1 btn btn-secondary\" [routerLink]=\"['/users']\">Cancel</a>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- END CHANGE PASSWORD FORM -->\r\n\r\n<!-- BEGIN CHANGE USER DATA -->\r\n<div *ngIf=\"shouldChangeUserData && model\" [hidden]=\"showButtonLoading\">\r\n    <div class=\"card card-default\">\r\n        <div class=\"card-header\">\r\n            <h3>{{model.name}}</h3>\r\n        </div>\r\n        <div class=\"card-body\">\r\n\r\n            <!--Input - text -->\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'users.edit.userName-tooltip' | translate\">{{\r\n                        'users.edit.userName' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-8\">\r\n                        <label class=\"label label-info\">{{ model.userName }} </label>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <!--Input - text -->\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'users.edit.name-tooltip' | translate\">{{\r\n                        'users.edit.name' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-8\">\r\n                        <input class=\"form-control\" autocomplete=\"name\" [placeholder]=\"'users.edit.name-tooltip' | translate\" [(ngModel)]=\"model.name\" />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <!--Input - text -->\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'users.edit.email-tooltip' | translate\">{{\r\n                        'users.edit.email' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-8\">\r\n                        <input class=\"form-control\" autocomplete=\"model-email\" [placeholder]=\"'users.edit.email-tooltip' | translate\" [(ngModel)]=\"model.email\" />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <!--Checkbox-->\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'users.edit.emailConfirmed-tooltip' | translate\">{{\r\n                        'users.edit.emailConfirmed' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-8\">\r\n                        <label class=\"switch m-0\">\r\n                            <input type=\"checkbox\" [(ngModel)]=\"model.emailConfirmed\" />\r\n                            <span></span>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <!--Input - text -->\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'users.edit.socialNumber-tooltip' | translate\">{{\r\n                        'users.edit.socialNumber' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-8\">\r\n                        <input class=\"form-control\" autocomplete=\"model-socialNumber\" [placeholder]=\"'users.edit.socialNumber-tooltip' | translate\" [(ngModel)]=\"model.socialNumber\" />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <!--Input - text -->\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'users.edit.phoneNumber-tooltip' | translate\">{{\r\n                        'users.edit.phoneNumber' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-8\">\r\n                        <input class=\"form-control\" autocomplete=\"model-phoneNumber\" [placeholder]=\"'users.edit.phoneNumber-tooltip' | translate\" [(ngModel)]=\"model.phoneNumber\" />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <!--Checkbox-->\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'users.edit.phoneNumberConfirmed-tooltip' | translate\">{{\r\n                        'users.edit.phoneNumberConfirmed' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-8\">\r\n                        <label class=\"switch m-0\">\r\n                            <input type=\"checkbox\" [(ngModel)]=\"model.phoneNumberConfirmed\" />\r\n                            <span></span>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <!--Datepicker-->\r\n            <fieldset>\r\n                <div class=\"form-group row mb\">\r\n                    <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'users.edit.birthdate-tooltip' | translate\">{{\r\n                        'users.edit.birthdate' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-8\">\r\n                        <input type=\"text\" class=\"form-control\" #dp=\"bsDatepicker\" bsDatepicker [(bsValue)]=\"model.birthdate\" name=\"dp-basic\" [bsConfig]=\"bsConfig\">\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <!--Checkbox-->\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'users.edit.twoFactorEnabled-tooltip' | translate\">{{\r\n                        'users.edit.twoFactorEnabled' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-8\">\r\n                        <label class=\"switch m-0\">\r\n                            <input type=\"checkbox\" [(ngModel)]=\"model.twoFactorEnabled\" />\r\n                            <span></span>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <!--Datepicker-->\r\n            <fieldset>\r\n                <div class=\"form-group row mb\">\r\n                    <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'users.edit.lockoutEnd-tooltip' | translate\">{{\r\n                        'users.edit.lockoutEnd' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-8\">\r\n                        <input type=\"text\" class=\"form-control\" #dp=\"bsDatepicker\" bsDatepicker [(bsValue)]=\"model.lockoutEnd\" name=\"dp-basic\" [bsConfig]=\"bsConfig\">\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <!--Checkbox-->\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'users.edit.lockoutEnabled-tooltip' | translate\">{{\r\n                        'users.edit.lockoutEnabled' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-8\">\r\n                        <label class=\"switch m-0\">\r\n                            <input type=\"checkbox\" [(ngModel)]=\"model.lockoutEnabled\" />\r\n                            <span></span>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <!--Input - Number -->\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'users.edit.accessFailedCount-tooltip' | translate\">{{\r\n                        'users.edit.accessFailedCount' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-8\">\r\n                        <input class=\"form-control\" autocomplete=\"model-accessFailedCount\" [placeholder]=\"'users.edit.accessFailedCount-tooltip' | translate\" [(ngModel)]=\"model.accessFailedCount\" numbersOnly />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <!--Button-->\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label placement=\"top\" [tooltip]=\"'users.edit.claims-tooltip' | translate\" class=\"col-xl-4 col-form-label\">{{\r\n                        'users.edit.claims' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-8\">\r\n                        <a [routerLink]=\"['/users', model.userName, 'claims']\" class=\"btn btn-primary\">{{\r\n                            'users.edit.claims' | translate }}</a>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <!--Button-->\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label placement=\"top\" [tooltip]=\"'users.edit.roles-tooltip' | translate\" class=\"col-xl-4 col-form-label\">{{\r\n                        'users.edit.roles' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-8\">\r\n                        <a [routerLink]=\"['/users', model.userName, 'roles']\" class=\"btn btn-primary\">{{\r\n                            'users.edit.roles' | translate }}</a>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <!--Button-->\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label placement=\"top\" [tooltip]=\"'users.edit.externalLogins-tooltip' | translate\" class=\"col-xl-4 col-form-label\">{{\r\n                        'users.edit.externalLogins' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-8\">\r\n                        <a [routerLink]=\"['/users', model.userName, 'logins']\" class=\"btn btn-primary\">{{\r\n                            'users.edit.externalLogins' | translate }}</a>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <p>\r\n                <small class=\"text-muted\">* If you are not an Administrator, some fields will not show.</small>\r\n            </p>\r\n\r\n        </div>\r\n        <div class=\"card-footer\">\r\n            <button class=\"mb-1 btn btn-primary\" (click)=\"update()\" type=\"button\">Save</button>\r\n            <a class=\"mb-1 btn btn-secondary\" [routerLink]=\"['/users']\">Cancel</a>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- END CHANGE USER DATA -->\r\n\r\n<div *ngIf=\"errors.length > 0\">\r\n    <alert type=\"danger\">\r\n        <div *ngFor=\"let error of errors; let i = index\"><strong>{{i+1}}</strong> {{error}}</div>\r\n    </alert>\r\n</div>\r\n<toaster-container [toasterconfig]=\"toasterconfig\"></toaster-container>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslatorService } from '@core/translator/translator.service';\r\nimport { UserService } from '@shared/services/user.service';\r\nimport { ProblemDetails } from '@shared/viewModel/default-response.model';\r\nimport { ResetPassword } from '@shared/viewModel/reset-password.model';\r\nimport { UserProfile } from '@shared/viewModel/userProfile.model';\r\nimport { ToasterConfig, ToasterService } from 'angular2-toaster';\r\nimport * as jsonpatch from 'fast-json-patch';\r\nimport { throwError } from 'rxjs';\r\nimport { flatMap, tap } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n    selector: \"app-user-edit\",\r\n    templateUrl: \"./user-edit.component.html\",\r\n    styleUrls: [\"./user-edit.component.scss\"],\r\n    providers: [UserService],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class UserEditComponent implements OnInit {\r\n\r\n    public errors: Array<string>;\r\n    public model: UserProfile;\r\n    public resetPassword: ResetPassword;\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({\r\n        positionClass: 'toast-top-right',\r\n        showCloseButton: true\r\n    });\r\n    public bsConfig = {\r\n        containerClass: 'theme-angle'\r\n    };\r\n    public showButtonLoading: boolean = true;\r\n\r\n    public shouldChangePass: boolean = false;\r\n    public shouldChangeUserData: boolean = true;\r\n    private username: string;\r\n    patchObserver: jsonpatch.Observer<UserProfile>;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        public translator: TranslatorService,\r\n        private userService: UserService,\r\n        public toasterService: ToasterService) { }\r\n\r\n    public ngOnInit() {\r\n        this.route.params\r\n            .pipe(tap(p => this.username = p[\"username\"]),\r\n                flatMap(p => this.userService.getDetails(p[\"username\"])),\r\n                tap(user => this.patchObserver = jsonpatch.observe(user))\r\n            ).subscribe(result => {\r\n                this.model = result;\r\n                this.showButtonLoading = false;\r\n                if (this.model.lockoutEnd != null)\r\n                    this.model.lockoutEnd = new Date(this.model.lockoutEnd);\r\n            }, err => {\r\n                this.router.navigate(['/users']);\r\n            });\r\n        this.errors = [];\r\n        this.resetPassword = new ResetPassword();\r\n        \r\n    }\r\n\r\n    public update() {\r\n\r\n        this.showButtonLoading = true;\r\n        this.errors = [];\r\n        try {\r\n\r\n            this.userService.patch(this.username, jsonpatch.generate(this.patchObserver)).subscribe(\r\n                () => {\r\n                    this.showSuccessMessage();\r\n                    this.router.navigate([\"/users\"]);\r\n                },\r\n                err => {\r\n                    this.errors = ProblemDetails.GetErrors(err).map(a => a.value);\r\n                    this.showButtonLoading = false;\r\n                }\r\n            );\r\n        } catch (error) {\r\n            this.errors = [];\r\n            this.errors.push(\"Unknown error while trying to update\");\r\n            this.showButtonLoading = false;\r\n            return throwError(\"Unknown error while trying to update\");\r\n        }\r\n    }\r\n\r\n    public resetPass() {\r\n\r\n        this.showButtonLoading = true;\r\n        this.errors = [];\r\n        this.userService.resetPassword(this.username, this.resetPassword).subscribe(\r\n            () => {\r\n                this.showSuccessMessage();\r\n                this.router.navigate([\"/users\"]);\r\n            },\r\n            err => {\r\n                this.errors = ProblemDetails.GetErrors(err).map(a => a.value);\r\n                this.showButtonLoading = false;\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    public showChangePass() {\r\n        this.shouldChangePass = true;\r\n        this.shouldChangeUserData = false;\r\n    }\r\n\r\n    public showChangeData() {\r\n        this.shouldChangePass = false;\r\n        this.shouldChangeUserData = true;\r\n    }\r\n\r\n    public showSuccessMessage() {\r\n        this.translator.translate.get('toasterMessages').subscribe(a => {\r\n            this.toasterService.pop(\"success\", a[\"title-success\"], a[\"message-success\"]);\r\n        });\r\n    }\r\n}\r\n","<div class=\"content-heading\">\r\n    <div>\r\n        💻 {{ 'general.users' | translate }} - <b>Claims</b>\r\n        <small><b [innerHTML]=\"'client.ClaimDescription' | translate\"></b></small>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"card card-default\" *ngIf=\"user\">\r\n    <div class=\"card-body\">\r\n        <a [routerLink]=\"[ '/users', user.userName, 'edit']\" class=\"btn btn-outline-primary\">{{ 'general.goback' | translate }}</a>\r\n    </div>\r\n</div>\r\n\r\n<app-loading *ngIf=\"model == null\"></app-loading>\r\n\r\n\r\n<div class=\"card card-default\" *ngIf=\"model\">\r\n    <div class=\"card-header\">\r\n        <div class=\"card-header\" *ngIf=\"user\">\r\n            <!-- START card-->\r\n            <div class=\"card\">\r\n                <div class=\"half-float\">\r\n                    <img class=\"img-fluid\" src=\"assets/img/bg3.jpg\" alt=\"\">\r\n                    <div class=\"half-float-bottom\" *ngIf=\"user.picture\">\r\n                        <img class=\"img-thumbnail circle thumb128\" [src]=\"user.picture\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"card-body text-center\">\r\n                    <h3 class=\"m-0\">{{user.name}}</h3>\r\n                    <p class=\"text-muted\"><i class=\"fas fa-user\"></i> {{user.userName}}</p>\r\n                    <p class=\"text-muted\"><i class=\"fas fa-mail-bulk\"></i> {{user.email}}</p>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <div class=\"card bg-danger-dark border-0\">\r\n                        <div class=\"row align-items-center mx-0\">\r\n                            <div class=\"col-4 text-center\">\r\n                                <em class=\"icon-star fa-3x\"></em>\r\n                            </div>\r\n                            <div class=\"col-8 py-4 bg-danger rounded-right\">\r\n                                <div class=\"h1 m-0 text-bold\">{{total}}</div>\r\n                                <div class=\"text-uppercase\">Events</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- END card-->\r\n        </div>\r\n    </div>\r\n    <div class=\"card-body\">\r\n\r\n        <table class=\"table table-striped table-bordered table-hover\" id=\"table-user-events\">\r\n            <thead>\r\n                <tr>\r\n                    <td>Category</td>\r\n                    <th>Action</th>\r\n                    <th>When</th>\r\n                    <th>Who</th>\r\n                    <th>Where</th>\r\n                    <th>Details</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let history of model; index as i\">\r\n                    <td>{{history.category}}</td>\r\n                    <td>{{history.action}}</td>\r\n                    <td>{{history.when}}</td>\r\n                    <td>{{history.who}}</td>\r\n                    <td>{{history.ip}}</td>\r\n                    <td>\r\n                        <button class=\"btn btn-primary\" (click)=\"addRow(i, 'table-user-events')\"><i class=\"far fa-clock\"></i></button>\r\n                    </td>\r\n                </tr>\r\n\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        <div class=\"d-flex\">\r\n            <div>\r\n                <div class=\"input-group\">\r\n                    <input class=\"form-control\" type=\"text\" placeholder=\"Search\" (keyup)=\"findEvent($event)\" (blur)=\"findEvent($event)\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"ml-auto\">\r\n                <div class=\"input-group\">\r\n                    <label class=\"col-form-label\">Items per page:&nbsp;</label>\r\n                    <select class=\"custom-select\" [(ngModel)]=\"quantity\" (change)=\"loadResources()\">\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"30\">30</option>\r\n                        <option value=\"40\">40</option>\r\n                        <option value=\"50\">50</option>\r\n                    </select>\r\n                    <ngb-pagination [collectionSize]=\"total\" [(page)]=\"page\" [maxSize]=\"5\" [rotate]=\"true\" [ellipses]=\"false\" [boundaryLinks]=\"true\" [pageSize]=\"quantity\" (pageChange)=\"loadResources()\">\r\n                    </ngb-pagination>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslatorService } from '@core/translator/translator.service';\r\nimport { UserService } from '@shared/services/user.service';\r\nimport { EventHistoryData } from '@shared/viewModel/event-history-data.model';\r\nimport { ListOf } from '@shared/viewModel/list-of.model';\r\nimport { UserProfile } from '@shared/viewModel/userProfile.model';\r\nimport { forkJoin, Observable, Subject } from 'rxjs';\r\nimport { catchError, debounceTime, flatMap, map, switchMap, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: \"app-user-events\",\r\n    templateUrl: \"./user-events.component.html\",\r\n    styleUrls: [\"./user-events.component.scss\"],\r\n    providers: [UserService]\r\n})\r\nexport class UserEventsComponent implements OnInit {\r\n\r\n    public model: EventHistoryData[];\r\n\r\n    public total: number;\r\n    public page: number = 1;\r\n    public quantity: number = 10;\r\n    private eventSearch: Subject<string> = new Subject<string>();\r\n    public user: UserProfile;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        public translator: TranslatorService,\r\n        private userService: UserService) { }\r\n\r\n    ngOnInit() {\r\n        this.route.params\r\n            .pipe(\r\n                flatMap(p => this.userService.getDetails(p[\"username\"])),\r\n                tap(user => this.user = user),\r\n            )\r\n            .subscribe(s => this.loadResources(),\r\n                err => {\r\n                    this.router.navigate(['/users']);\r\n                });\r\n\r\n        this.eventSearch\r\n            .pipe(debounceTime(500))\r\n            .pipe(switchMap(text => this.userService.searchEvents(this.user.userName, text, this.quantity, this.page)))\r\n            .subscribe((response: ListOf<EventHistoryData>) => {\r\n                this.model = response.collection;\r\n                this.total = response.total;\r\n            });\r\n    }\r\n\r\n    public loadResources() {\r\n        this.userService.showEvents(this.user.userName, this.quantity, this.page)\r\n            .subscribe((response: ListOf<EventHistoryData>) => {\r\n                this.setEveryoneToNotShow();\r\n                this.model = response.collection;\r\n                this.total = response.total;\r\n            });\r\n    }\r\n\r\n    public findEvent(event: any) {\r\n        if (event.target.value == null || event.target.value === \"\") {\r\n            this.loadResources();\r\n        }\r\n\r\n        this.eventSearch.next(event.target.value);\r\n    }\r\n\r\n    public addRow(index: number, tableName: string) {\r\n\r\n        var table = document.getElementById(tableName) as HTMLTableElement;\r\n\r\n        // Hide everyone before. In case users click in another item from list\r\n        table.querySelectorAll(\"[temp='true']\").forEach((i: HTMLTableRowElement) => i.remove());\r\n        var item = this.model[index];\r\n\r\n        if (item.show) {\r\n            this.setEveryoneToNotShow();\r\n            return;\r\n        }\r\n\r\n        let htmlContent = `<pre class=\"pre-scrollable-width\">${JSON.stringify(JSON.parse(item.details), null, 4)}</pre>`;\r\n\r\n        // Create an empty <tr> element and add it to the 1st position of the table:\r\n        var row = table.insertRow(index + 2);\r\n        row.setAttribute(\"temp\", \"true\")\r\n\r\n        // Insert new cells (<td> elements) at the 1st and 2nd position of the \"new\" <tr> element:\r\n        var cell = row.insertCell(0);\r\n        // Add some text to the new cells:\r\n        cell.innerHTML = htmlContent;\r\n        cell.colSpan = 7;\r\n\r\n        this.setEveryoneToNotShow();\r\n        item.show = true;\r\n    }\r\n\r\n    private setEveryoneToNotShow() {\r\n        if (this.model == null)\r\n            return;\r\n        // set all others items as show = false\r\n        this.model.forEach(e => {\r\n            e.show = false;\r\n        });\r\n    }\r\n}\r\n","<div class=\"content-heading\">\r\n    <div>\r\n        👨‍👩‍👧‍👦 &nbsp;&nbsp;{{ 'general.users' | translate }}\r\n        <small><b> {{ 'users.description' | translate }}.</b></small>\r\n    </div>\r\n</div>\r\n\r\n<app-loading *ngIf=\"users == null\"></app-loading>\r\n\r\n<div class=\"card card-default\" *ngIf=\"users\">\r\n    <div class=\"card-header\">\r\n        <a class=\"btn btn-outline-primary mb-3\" [routerLink]=\"[ '/users/add' ]\"><i class=\"fa fa-plus-circle\"></i>\r\n            {{ 'users.new-user' | translate }}</a>\r\n        <div class=\"input-group\">\r\n            <input class=\"form-control\" type=\"text\" placeholder=\"Search\" (keyup)=\"findUser($event)\" (blur)=\"findUser($event)\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"card-body\">\r\n        <div class=\"overlay\" *ngIf=\"loading\">\r\n            <div class=\"w-100 d-flex justify-content-center align-items-center\">\r\n                <app-loading></app-loading>\r\n            </div>\r\n        </div>\r\n        <div class=\"table-responsive\">\r\n            <table class=\"table table-striped\">\r\n\r\n                <tbody>\r\n                    <tr *ngFor=\"let user of users\">\r\n                        <td>\r\n                            <div class=\"btn-group\">\r\n                                <a [routerLink]=\"['/users', user.userName, 'edit']\" class=\"btn btn-primary btn-xs\" placement=\"top\" [tooltip]=\"'general.edit' | translate\"><i\r\n                                        class=\"fa fa-edit\"></i></a>\r\n                                <a [routerLink]=\"['/users', user.userName, 'events']\" [state]=\"user\" class=\"btn btn-outline-primary btn-xs\" placement=\"top\" [tooltip]=\"'users.list.log-tooltip' | translate\"><i\r\n                                        class=\"fas fa-history\"></i></a>\r\n\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div class=\"media align-items-center\">\r\n                                <a class=\"mr-3\" href=\"#\">\r\n                                    <img *ngIf=\"user.picture\" class=\"img-fluid rounded thumb48\" [src]=\"user.picture\" />\r\n                                    <img *ngIf=\"!user.picture\" class=\"img-fluid rounded thumb48\" src=\"assets/img/dummy.png\" alt=\"\" />\r\n                                </a>\r\n                                <div class=\"media-body d-flex\">\r\n                                    <div>\r\n                                        <h4 class=\"m-0\">{{user.name}}</h4>\r\n                                        <small class=\"text-muted\">{{user.userName}}</small>\r\n                                        <p><i class=\"fas fa-mail-bulk\"></i> {{user.email}}</p>\r\n                                    </div>\r\n                                    <div class=\"ml-auto\">\r\n                                        <button class=\"btn btn-danger btn-sm\" placement=\"top\" [tooltip]=\"'general.remove' | translate\" (click)=\"remove(user)\"><i\r\n                                                class=\"fa fa-times\"></i></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </td>\r\n\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        <div class=\"d-flex\">\r\n            <div>\r\n                <div class=\"input-group\">\r\n                    <input class=\"form-control\" type=\"text\" placeholder=\"Search\" (keyup)=\"findUser($event)\" (blur)=\"findUser($event)\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"ml-auto\">\r\n                <div class=\"input-group\">\r\n                    <label class=\"col-form-label\">Items per page:&nbsp;</label>\r\n                    <select class=\"custom-select\" [(ngModel)]=\"quantity\" (change)=\"loadResources()\">\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"30\">30</option>\r\n                        <option value=\"40\">40</option>\r\n                        <option value=\"50\">50</option>\r\n                    </select>\r\n                    <ngb-pagination [collectionSize]=\"total\" [(page)]=\"page\" [maxSize]=\"5\" [rotate]=\"true\" [ellipses]=\"false\" [boundaryLinks]=\"true\" [pageSize]=\"quantity\" (pageChange)=\"loadResources()\">\r\n                    </ngb-pagination>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { TranslatorService } from '@core/translator/translator.service';\r\nimport { UserService } from '@shared/services/user.service';\r\nimport { ProblemDetails } from '@shared/viewModel/default-response.model';\r\nimport { EventHistoryData } from '@shared/viewModel/event-history-data.model';\r\nimport { ListOfUsers, UserProfile } from '@shared/viewModel/userProfile.model';\r\nimport { Observable, pipe, Subject } from 'rxjs';\r\nimport { debounceTime, switchMap, tap } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n    selector: \"app-user-list\",\r\n    templateUrl: \"./user-list.component.html\",\r\n    styleUrls: [\"./user-list.component.scss\"],\r\n    providers: [UserService]\r\n})\r\nexport class UserListComponent implements OnInit {\r\n\r\n    public users: UserProfile[];\r\n    public selectedUser: UserProfile;\r\n    public loading: boolean = true;\r\n    public total: number;\r\n    public page: number = 1;\r\n    public quantity: number = 10;\r\n    private userSearch: Subject<string> = new Subject<string>();\r\n\r\n    constructor(\r\n        public translator: TranslatorService,\r\n        private userService: UserService) { }\r\n\r\n    ngOnInit() {\r\n        this.loadResources();\r\n        this.userSearch\r\n            .pipe(debounceTime(500))\r\n            .pipe(tap(() => this.animateLoadUsers()))\r\n            .pipe(switchMap(a => this.userService.findUsers(a, this.quantity, this.page)))\r\n            .subscribe((response: ListOfUsers) => {\r\n                this.users = response.collection;\r\n                this.total = response.total;\r\n                this.stopAnimateLoadUsers();\r\n            });\r\n    }\r\n\r\n    private animateLoadUsers() {\r\n        this.loading = true;\r\n    }\r\n\r\n    private stopAnimateLoadUsers(){\r\n        this.loading = false;\r\n    }\r\n\r\n    public loadResources() {\r\n        this.animateLoadUsers();\r\n        this.userService.getUsers(this.quantity, this.page)\r\n            .subscribe(a => {\r\n                this.users = a.collection;\r\n                this.total = a.total;\r\n                this.stopAnimateLoadUsers();\r\n            });\r\n    }\r\n\r\n    public remove(user: UserProfile) {\r\n        this.translator.translate.get('identityResource.remove').subscribe(m => {\r\n            Swal.fire({\r\n                title: m['title'],\r\n                text: m[\"text\"],\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#DD6B55',\r\n                confirmButtonText: m[\"confirmButtonText\"],\r\n                cancelButtonText: m[\"cancelButtonText\"],\r\n\r\n            }).then(isConfirm => {\r\n                if (isConfirm) {\r\n\r\n                    this.userService.remove(user.userName).subscribe(\r\n                        () => {\r\n                            this.loadResources();\r\n                            Swal.fire(\"Deleted!\", m[\"deleted\"], 'success');\r\n                        },\r\n                        err => {\r\n                            let errors = ProblemDetails.GetErrors(err).map(a => a.value);\r\n                            Swal.fire(\"Error!\", errors[0], 'error');\r\n                        }\r\n                    );\r\n                } else {\r\n                    Swal.fire(\"Cancelled\", m[\"cancelled\"], 'error');\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    public findUser(event: any) {\r\n        if (event.target.value == null || event.target.value === \"\") {\r\n            this.loadResources();\r\n        }\r\n\r\n        this.userSearch.next(event.target.value);\r\n    }\r\n\r\n}\r\n","<div class=\"content-heading\">\r\n    <div>\r\n        💻 {{ 'general.users' | translate }} - <b>Logins</b>\r\n        <small><b [innerHTML]=\"'client.ClaimDescription' | translate\"></b></small>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"card card-default\">\r\n    <div class=\"card-body\">\r\n        <a [routerLink]=\"[ '/users', userName, 'edit']\" class=\"btn btn-outline-primary\">{{ 'general.goback' | translate }}</a>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"errors.length > 0\">\r\n    <alert type=\"danger\">\r\n        <div *ngFor=\"let error of errors; let i = index\"><strong>{{i+1}}</strong> {{error}}</div>\r\n    </alert>\r\n</div>\r\n\r\n<app-loading *ngIf=\"showButtonLoading\"></app-loading>\r\n\r\n<div class=\"card card-default\">\r\n    <div class=\"card-header\">\r\n        <h3>{{ userName }}</h3>\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <p>{{'users.logins.nologins' | translate}}</p>\r\n        <table class=\"table table-striped\" [hidden]=\"logins.length <= 0\">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>{{ 'users.logins.loginProvider' | translate }}</th>\r\n                    <th>{{ 'users.logins.providerDisplayName' | translate }}</th>\r\n                    <th>{{ 'users.logins.providerKey' | translate }}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let login of logins\">\r\n                    <td><button class=\"btn btn-danger btn-xs\" (click)=\"remove(login.loginProvider, login.providerKey)\"><i class=\"fa fa-times\"></i></button></td>\r\n                    <td>{{login.loginProvider}}</td>\r\n                    <td>{{login.providerDisplayName}}</td>\r\n                    <td>{{login.providerKey}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"errors.length > 0\">\r\n    <alert type=\"danger\">\r\n        <div *ngFor=\"let error of errors; let i = index\"><strong>{{i+1}}</strong> {{error}}</div>\r\n    </alert>\r\n</div>\r\n<toaster-container [toasterconfig]=\"toasterconfig\"></toaster-container>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslatorService } from '@core/translator/translator.service';\r\nimport { UserService } from '@shared/services/user.service';\r\nimport { ProblemDetails } from '@shared/viewModel/default-response.model';\r\nimport { UserLogin } from '@shared/viewModel/user-login.model';\r\nimport { ToasterConfig, ToasterService } from 'angular2-toaster';\r\nimport { throwError } from 'rxjs';\r\nimport { debounceTime, flatMap, map, tap } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n    selector: \"app-user-logins\",\r\n    templateUrl: \"./user-logins.component.html\",\r\n    styleUrls: [\"./user-logins.component.scss\"],\r\n    providers: [UserService],\r\n})\r\nexport class UserLoginsComponent implements OnInit {\r\n\r\n    public errors: Array<string>;\r\n    public logins: UserLogin[];\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({\r\n        positionClass: 'toast-top-right',\r\n        showCloseButton: true\r\n    });\r\n\r\n    public showButtonLoading: boolean;\r\n    public userName: string;\r\n    public bsConfig = {\r\n        containerClass: 'theme-angle'\r\n    };\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        public translator: TranslatorService,\r\n        private userService: UserService,\r\n        public toasterService: ToasterService) { }\r\n\r\n    public ngOnInit() {\r\n        this.route.params.pipe(tap(p => this.userName = p[\"username\"])).pipe(map(p => p[\"username\"])).pipe(flatMap(m => this.userService.getUserLogins(m.toString()))).subscribe(result => this.logins = result);\r\n        this.errors = [];\r\n        this.showButtonLoading = false;\r\n    }\r\n\r\n    public showSuccessMessage() {\r\n        this.translator.translate.get('toasterMessages').subscribe(a => {\r\n            this.toasterService.pop(\"success\", a[\"title-success\"], a[\"message-success\"]);\r\n        });\r\n    }\r\n\r\n\r\n    public remove(loginProvider: string, providerKey: string) {\r\n\r\n        this.showButtonLoading = true;\r\n        this.errors = [];\r\n        try {\r\n\r\n            this.userService.removeLogin(this.userName, loginProvider, providerKey).subscribe(\r\n                registerResult => {\r\n                    if (registerResult.data) {\r\n                        this.showSuccessMessage();\r\n                        this.loadLogins();\r\n                    }\r\n                    this.showButtonLoading = false;\r\n                },\r\n                err => {\r\n                    this.errors = ProblemDetails.GetErrors(err).map(a => a.value);\r\n                    this.showButtonLoading = false;\r\n                }\r\n            );\r\n        } catch (error) {\r\n            this.errors = [];\r\n            this.errors.push(\"Unknown error while trying to remove\");\r\n            this.showButtonLoading = false;\r\n            return throwError(\"Unknown error while trying to remove\");\r\n        }\r\n\r\n    }\r\n\r\n    private loadLogins(): void {\r\n        this.userService.getUserLogins(this.userName).subscribe(c => this.logins = c);\r\n    }\r\n}\r\n","<div class=\"content-heading\">\r\n    <div>\r\n        💻 {{ 'general.users' | translate }} - <b>Roles</b>\r\n        <small><b [innerHTML]=\"'client.ClaimDescription' | translate\"></b></small>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"card card-default\">\r\n    <div class=\"card-body\">\r\n        <a [routerLink]=\"[ '/users', userName, 'edit']\" class=\"btn btn-outline-primary\">{{ 'general.goback' | translate }}</a>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"errors.length > 0\">\r\n    <alert type=\"danger\">\r\n        <div *ngFor=\"let error of errors; let i = index\"><strong>{{i+1}}</strong> {{error}}</div>\r\n    </alert>\r\n</div>\r\n\r\n<app-loading *ngIf=\"model == null || showButtonLoading\"></app-loading>\r\n\r\n<div class=\"card card-default\" *ngIf=\"userRoles && userRoles.length > 0\">\r\n    <div class=\"card-header\">\r\n        <h3>{{ userName }}</h3>\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>{{ 'users.roles.name' | translate }}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let role of userRoles\">\r\n                    <td><button class=\"btn btn-danger btn-xs\" (click)=\"remove(role.name)\"><i class=\"fa fa-times\"></i></button></td>\r\n                    <td>{{role.name}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"card card-default\">\r\n    <div class=\"card-header\">\r\n        <h3>{{ userName }}</h3>\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <!--Select-->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'users.roles.role-tooltip' | translate\">{{\r\n                    'users.roles.role' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-8\">\r\n                    <ng-select [items]=\"roles\" [(ngModel)]=\"model.role\" [placeholder]=\"'users.roles.role-tooltip' | translate\"></ng-select>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        <button class=\"mb-1 btn btn-primary\" (click)=\"save()\" type=\"button\">Save</button>\r\n        <a class=\"mb-1 btn btn-secondary\" [routerLink]=\"['/users', userName, 'edit']\">Cancel</a>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"errors.length > 0\">\r\n    <alert type=\"danger\">\r\n        <div *ngFor=\"let error of errors; let i = index\"><strong>{{i+1}}</strong> {{error}}</div>\r\n    </alert>\r\n</div>\r\n<toaster-container [toasterconfig]=\"toasterconfig\"></toaster-container>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslatorService } from '@core/translator/translator.service';\r\nimport { RoleService } from '@shared/services/role.service';\r\nimport { UserService } from '@shared/services/user.service';\r\nimport { ProblemDetails } from '@shared/viewModel/default-response.model';\r\nimport { Role, SaveRole } from '@shared/viewModel/role.model';\r\nimport { ToasterConfig, ToasterService } from 'angular2-toaster';\r\nimport { Observable } from 'rxjs';\r\nimport { debounceTime, flatMap, map, tap } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n    selector: \"app-user-roles\",\r\n    templateUrl: \"./user-roles.component.html\",\r\n    styleUrls: [\"./user-roles.component.scss\"],\r\n    providers: [UserService, RoleService],\r\n})\r\nexport class UserRolesComponent implements OnInit {\r\n\r\n    public errors: Array<string>;\r\n    public model: SaveRole;\r\n    public userRoles: Role[];\r\n    public roles: string[];\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({\r\n        positionClass: 'toast-top-right',\r\n        showCloseButton: true\r\n    });\r\n    public showButtonLoading: boolean;\r\n    public userName: string;\r\n    public bsConfig = {\r\n        containerClass: 'theme-angle'\r\n    };\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        public translator: TranslatorService,\r\n        private userService: UserService,\r\n        public toasterService: ToasterService,\r\n        public roleService: RoleService) { }\r\n\r\n    public ngOnInit() {\r\n        this.route.params.pipe(tap(p => this.userName = p[\"username\"])).pipe(map(p => p[\"username\"])).pipe(flatMap(m => this.userService.getUserRoles(m.toString()))).subscribe(result => this.userRoles = result);\r\n        this.errors = [];\r\n        this.model = new SaveRole();\r\n        this.showButtonLoading = false;\r\n        this.roleService.getAvailableRoles().subscribe(roles => this.roles = roles.map(r => r.name));\r\n\r\n    }\r\n\r\n    public showSuccessMessage() {\r\n        this.translator.translate.get('toasterMessages').subscribe(a => {\r\n            this.toasterService.pop(\"success\", a[\"title-success\"], a[\"message-success\"]);\r\n        });\r\n    }\r\n\r\n    public remove(role: string) {\r\n\r\n        this.showButtonLoading = true;\r\n        this.errors = [];\r\n        this.userService.removeRole(this.userName, role).subscribe(\r\n            () => {\r\n                this.showSuccessMessage();\r\n                this.loadClaims();\r\n                this.showButtonLoading = false;\r\n            },\r\n            err => {\r\n                this.errors = ProblemDetails.GetErrors(err).map(a => a.value);\r\n                this.showButtonLoading = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadClaims(): void {\r\n        this.userService.getUserRoles(this.userName).subscribe(c => this.userRoles = c);\r\n    }\r\n\r\n    public save() {\r\n        this.showButtonLoading = true;\r\n        this.errors = [];\r\n        this.userService.saveRole(this.userName, this.model).subscribe(\r\n            registerResult => {\r\n                if (registerResult) {\r\n                    this.showSuccessMessage();\r\n                    this.loadClaims();\r\n                    this.model = new SaveRole();\r\n                }\r\n                this.showButtonLoading = false;\r\n            },\r\n            err => {\r\n                this.errors = ProblemDetails.GetErrors(err).map(a => a.value);\r\n                this.showButtonLoading = false;\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { InputValidationComponent } from '@shared/components/input-validation/input-validation';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ToasterModule } from 'angular2-toaster';\r\nimport { TagInputModule } from 'ngx-chips';\r\n\r\nimport { UserAddComponent } from './add/user-add.component';\r\nimport { UserClaimsComponent } from './claims/user-claims.component';\r\nimport { UserEditComponent } from './edit/user-edit.component';\r\nimport { UserEventsComponent } from './events/user-events.component';\r\nimport { UserListComponent } from './list/user-list.component';\r\nimport { UserLoginsComponent } from './logins/user-logins.component';\r\nimport { UserRolesComponent } from './roles/user-roles.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: \"\", component: UserListComponent },\r\n    { path: \":username/edit\", component: UserEditComponent },\r\n    { path: \"add\", component: UserAddComponent },\r\n    { path: \":username/claims\", component: UserClaimsComponent },\r\n    { path: \":username/roles\", component: UserRolesComponent },\r\n    { path: \":username/logins\", component: UserLoginsComponent },\r\n    { path: \":username/events\", component: UserEventsComponent },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        ToasterModule.forRoot(),\r\n        RouterModule.forChild(routes),\r\n        TagInputModule,\r\n        NgbPaginationModule,\r\n    ],\r\n    declarations: [\r\n        UserListComponent,\r\n        UserEditComponent,\r\n        UserAddComponent,\r\n        UserClaimsComponent,\r\n        UserRolesComponent,\r\n        UserLoginsComponent,\r\n        UserEventsComponent\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class UserModule { }\r\n","\n  <div class=\"spinner-container d-flex\" [style.height.px]=\"height\" [style.width.px]=\"width\">\n    <svg class=\"spinner\" viewBox=\"0 0 50 50\" [style.height.px]=\"height\" [style.width.px]=\"width\">\n      <circle class=\"path\" [class.white-stroke]=\"whiteStroke\"\n        cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"5\">\n      </circle>\n    </svg>\n  </div>","import { Component, Input } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'loading-spinner',\r\n  template: `\r\n  <div class=\"spinner-container d-flex\" [style.height.px]=\"height\" [style.width.px]=\"width\">\r\n    <svg class=\"spinner\" viewBox=\"0 0 50 50\" [style.height.px]=\"height\" [style.width.px]=\"width\">\r\n      <circle class=\"path\" [class.white-stroke]=\"whiteStroke\"\r\n        cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"5\">\r\n      </circle>\r\n    </svg>\r\n  </div>`,\r\n  styleUrls: ['./loading-spinner.component.scss'],\r\n})\r\nexport class LoadingSpinnerComponent {\r\n  @Input() height = 40;\r\n  @Input() width = 40;\r\n  @Input() whiteStroke = false;\r\n}\r\n","import { ValidationErrors, AbstractControl } from '@angular/forms';\r\n\r\nexport class EqualToValidator {\r\n\r\n  static validator(equalToControl: AbstractControl | string) {\r\n    const controlName = equalToControl;\r\n\r\n    return (control: AbstractControl): ValidationErrors => {\r\n      if (typeof equalToControl === 'string') {\r\n        // 'Parent' de 'control' vai ser nulo durante a inicialização da página\r\n        if (!control.parent) { return null; }\r\n\r\n        equalToControl = control.parent.get(equalToControl);\r\n      }\r\n\r\n      if ((controlName === 'userEmail1') && control.value !== equalToControl.value) { return { equalToEmail: true }; }\r\n      if ((controlName === 'password') && control.value !== equalToControl.value) { return { equalToPassword: true }; }\r\n      return null;\r\n    };\r\n  }\r\n}\r\n","export * from './equal-to.validator';\r\nexport * from './password.validator';\r\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nexport class PasswordValidator {\r\n\r\n  static validator(control: AbstractControl): ValidationErrors {\r\n    const passwordErrors: { [key: string]: any } = {};\r\n\r\n    const numbersCharsRegex = new RegExp(/[\\d]/g);\r\n    const upperLettersRegex = new RegExp(/[A-Z]/g);\r\n    const lowerLettersRegex = new RegExp(/[a-z]/g);\r\n    const specialCharsRegex = new RegExp(/[!@#$%^&*()_\\-\\[\\]{};'~`:\"\\\\|,.<>\\/?]/g);\r\n    const forbiddenCharsRegex = new RegExp(/[^0-9A-Za-z!@#$%^&*()_\\-\\[\\]{};'~`:\"\\\\|,.<>\\/?]/g);\r\n\r\n    if (control.value != null && control.value.length < 8) { passwordErrors['minlength'] = true; }\r\n    //if (!numbersCharsRegex.test(control.value)) { passwordErrors['pwNotHaveNumber'] = true; }\r\n    //if (!upperLettersRegex.test(control.value)) { passwordErrors['pwNotHaveCapitalCase'] = true; }\r\n    //if (!lowerLettersRegex.test(control.value)) { passwordErrors['pwNotHaveSmallCase'] = true; }\r\n    //if (!specialCharsRegex.test(control.value)) { passwordErrors['pwNotHaveSpecialCharacters'] = true; }\r\n    //if (forbiddenCharsRegex.test(control.value)) { passwordErrors['pwHaveForbiddenCharacters'] = true; }\r\n\r\n\r\n    if (Object.keys(passwordErrors).length) {\r\n      passwordErrors['password'] = true;\r\n      return passwordErrors;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","\r\nexport class ResetPassword {\r\n    public password: string;\r\n    public confirmPassword: string;\r\n}\r\n"],"sourceRoot":""}