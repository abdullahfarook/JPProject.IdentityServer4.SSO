{"version":3,"sources":["./src/app/panel/events/events.module.ts","./src/app/panel/events/events.service.ts","./src/app/panel/events/list/events.component.html","./src/app/panel/events/list/events.component.ts"],"names":[],"mappings":"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","file":"17-es2015.0a8ecb239f0680d49d5a.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ToasterModule } from 'angular2-toaster/src/toaster.module';\r\nimport { TagInputModule } from 'ngx-chips';\r\n\r\nimport { EventsService } from './events.service';\r\nimport { EventsComponent } from './list/events.component';\r\n\r\nconst routes: Routes = [\r\n    { path: \"\", component: EventsComponent },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        ToasterModule.forRoot(),\r\n        RouterModule.forChild(routes),\r\n        TagInputModule,\r\n        NgbPaginationModule\r\n    ],\r\n    declarations: [\r\n        EventsComponent,\r\n    ],\r\n    providers: [\r\n        EventsService\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class EventsModule { }\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { SettingsService } from '@core/settings/settings.service';\r\nimport { environment } from '@env/environment';\r\nimport { ProblemDetails } from '@shared/viewModel/default-response.model';\r\nimport { EventHistoryData } from '@shared/viewModel/event-history-data.model';\r\nimport { EventSelector } from '@shared/viewModel/event-selector';\r\nimport { ListOf } from '@shared/viewModel/list-of.model';\r\nimport { ListOfPersistedGrant, PersistedGrant } from '@shared/viewModel/persisted-grants.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class EventsService {\r\n\r\n    endpoint: string;\r\n\r\n    constructor(private http: HttpClient, private settings: SettingsService) {\r\n        this.endpoint = environment.ResourceServer + \"api/events\";\r\n    }\r\n\r\n    public searchEvents(aggregate: string, quantity: number, page: number): Observable<ListOf<EventHistoryData>> {\r\n        let params = new HttpParams()\r\n            .set('limit', quantity.toString())\r\n            .set('offset', ((page - 1) * quantity).toString());\r\n        if (aggregate && aggregate != \"\") {\r\n            params = params.set('aggregate', aggregate);\r\n        }\r\n\r\n        return this.http.get<ListOf<EventHistoryData>>(`${this.endpoint}`, { params });\r\n    }\r\n\r\n    public listAggregates() {\r\n        return this.http.get<EventSelector[]>(`${this.endpoint}/aggregates`);\r\n    }\r\n\r\n}\r\n","<div class=\"content-heading\">\r\n    <div>\r\n        ðŸ’» {{ 'general.events' | translate }} - <b>Claims</b>\r\n        <small><b> {{ 'events.description' | translate }}</b></small>\r\n    </div>\r\n</div>\r\n\r\n<app-loading *ngIf=\"model == null\"></app-loading>\r\n\r\n\r\n<div class=\"card card-default\" *ngIf=\"model\">\r\n    <div class=\"card-header\">\r\n        <div class=\"card-header\" *ngIf=\"model\">\r\n            <!-- START card-->\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"card bg-danger-dark border-0\">\r\n                        <div class=\"row align-items-center mx-0\">\r\n                            <div class=\"col-4 text-center\">\r\n                                <em class=\"icon-star fa-3x\"></em>\r\n                            </div>\r\n                            <div class=\"col-8 py-4 bg-danger rounded-right\">\r\n                                <div class=\"h1 m-0 text-bold\">{{total}}</div>\r\n                                <div class=\"text-uppercase\">Events</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- END card-->\r\n        </div>\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <div class=\"form-horizontal\">\r\n            <!--Select-->\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-xl-2 col-form-label\" placement=\"top\" [tooltip]=\"'events.eventType-tooltip' | translate\">{{ 'events.eventType' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-4\">\r\n                        <ng-select [items]=\"aggregatesTypes\" (change)=\"getAggregates($event)\" [(ngModel)]=\"selectedType\" [placeholder]=\"'events.eventType' | translate\"></ng-select>\r\n                    </div>\r\n                    <label class=\"col-xl-2 col-form-label\" placement=\"top\" [tooltip]=\"'events.aggregate-tooltip' | translate\">{{ 'events.aggregate' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-4\">\r\n                        <input [(ngModel)]=\"selectedAggregate\" [typeahead]=\"aggregatesToSelect\" (typeaheadOnSelect)=\"loadResources()\" (blur)=\"loadResources()\" (keyup.enter)=\"loadResources()\" class=\"form-control\">\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n        </div>\r\n        <table class=\"table table-striped table-bordered table-hover\" id=\"table-events\">\r\n            <thead>\r\n                <tr>\r\n                    <th>{{ 'events.aggregate' | translate }}</th>\r\n                    <th>{{ 'events.category' | translate }}</th>\r\n                    <th>{{ 'events.action' | translate }}</th>\r\n                    <th>{{ 'events.when' | translate }}</th>\r\n                    <th>{{ 'events.who' | translate }}</th>\r\n                    <th>{{ 'events.where' | translate }}</th>\r\n                    <th>{{ 'events.details' | translate }}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let history of model; index as i\">\r\n                    <td>{{history.aggregate}}</td>\r\n                    <td>{{history.category}}</td>\r\n                    <td>{{history.action}}</td>\r\n                    <td>{{history.when}}</td>\r\n                    <td>{{history.who}}</td>\r\n                    <td>{{history.ip}}</td>\r\n                    <td>\r\n                        <button class=\"btn btn-primary\" (click)=\"addRow(i, 'table-events')\"><i class=\"far fa-clock\"></i></button>\r\n                    </td>\r\n                </tr>\r\n\r\n\r\n            </tbody>\r\n        </table>\r\n        <p>\r\n            <small class=\"text-muted\">* If you are not an Administrator, some fields will not show.</small>\r\n        </p>\r\n\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        <div class=\"d-flex\">\r\n            <div>\r\n                <div class=\"input-group\">\r\n                    <input class=\"form-control\" type=\"text\" placeholder=\"Search\" (keyup)=\"findEvent($event)\" (blur)=\"findEvent($event)\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"ml-auto\">\r\n                <div class=\"input-group\">\r\n                    <label class=\"col-form-label\">Items per page:&nbsp;</label>\r\n                    <select class=\"custom-select\" [(ngModel)]=\"quantity\" (change)=\"loadResources()\">\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"30\">30</option>\r\n                        <option value=\"40\">40</option>\r\n                        <option value=\"50\">50</option>\r\n                    </select>\r\n                    <ngb-pagination [collectionSize]=\"total\" [(page)]=\"page\" [maxSize]=\"5\" [rotate]=\"true\" [ellipses]=\"false\" [boundaryLinks]=\"true\" [pageSize]=\"quantity\" (pageChange)=\"loadResources()\">\r\n                    </ngb-pagination>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TranslatorService } from '@core/translator/translator.service';\r\nimport { UserService } from '@shared/services/user.service';\r\nimport { EventHistoryData } from '@shared/viewModel/event-history-data.model';\r\nimport { EventSelector } from '@shared/viewModel/event-selector';\r\nimport { ListOf } from '@shared/viewModel/list-of.model';\r\nimport { UserProfile } from '@shared/viewModel/userProfile.model';\r\nimport { forkJoin, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, flatMap, map, switchMap, tap } from 'rxjs/operators';\r\n\r\nimport { EventsService } from '../events.service';\r\n\r\n@Component({\r\n    selector: \"app-events\",\r\n    templateUrl: \"./events.component.html\",\r\n    styleUrls: [\"./events.component.scss\"],\r\n    providers: [UserService]\r\n})\r\nexport class EventsComponent implements OnInit {\r\n\r\n    public model: EventHistoryData[];\r\n    public selectedType: string;\r\n    public total: number;\r\n    public page: number = 1;\r\n    public quantity: number = 10;\r\n    private eventSearch: Subject<string> = new Subject<string>();\r\n\r\n    public eventsToSelect: EventSelector[];\r\n    public aggregatesToSelect: Array<string>;\r\n\r\n    public selectedAggregate: string;\r\n    aggregatesTypes: string[];\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        public translator: TranslatorService,\r\n        private eventService: EventsService) { }\r\n\r\n    ngOnInit() {\r\n        this.eventService.listAggregates().subscribe(s => {\r\n            this.eventsToSelect = s;\r\n            this.aggregatesTypes = Array.from(new Set(this.eventsToSelect.map(m => m.aggregateType)));\r\n        });\r\n\r\n        this.eventSearch\r\n            .pipe(debounceTime(500))\r\n            .pipe(switchMap(text => this.eventService.searchEvents(text, this.quantity, this.page)))\r\n            .subscribe((response: ListOf<EventHistoryData>) => {\r\n                this.model = response.collection;\r\n                this.total = response.total;\r\n                this.model.forEach(e => e.show = false);\r\n            });\r\n        this.loadResources();\r\n    }\r\n\r\n    public loadResources() {\r\n        this.eventSearch.next(this.selectedAggregate == null ? \"\" : this.selectedAggregate);\r\n    }\r\n\r\n    public findEvent(event: any) {\r\n        if (event.target.value == null || event.target.value === \"\") {\r\n            this.loadResources();\r\n        }\r\n\r\n        this.eventSearch.next(event.target.value);\r\n    }\r\n\r\n    public addRow(index: number, tableName: string) {\r\n\r\n        var table = document.getElementById(tableName) as HTMLTableElement;\r\n\r\n        // Hide everyone before. In case users click in another item from list\r\n        table.querySelectorAll(\"[temp='true']\").forEach((i: HTMLTableRowElement) => i.remove());\r\n        var item = this.model[index];\r\n\r\n        if (item.show) {\r\n            this.setEveryoneToNotShow();\r\n            return;\r\n        }\r\n\r\n        let htmlContent = `<pre>${JSON.stringify(JSON.parse(item.details), null, 4)}</pre>`;\r\n\r\n        // Create an empty <tr> element and add it to the 1st position of the table:\r\n        var row = table.insertRow(index + 2);\r\n        row.setAttribute(\"temp\", \"true\")\r\n\r\n        // Insert new cells (<td> elements) at the 1st and 2nd position of the \"new\" <tr> element:\r\n        var cell = row.insertCell(0);\r\n        // Add some text to the new cells:\r\n        cell.innerHTML = htmlContent;\r\n        cell.colSpan = 7;\r\n\r\n        this.setEveryoneToNotShow();\r\n        item.show = true;\r\n    }\r\n\r\n    private setEveryoneToNotShow() {\r\n        // set all others items as show = false\r\n        this.model.forEach(e => {\r\n            e.show = false;\r\n        });\r\n    }\r\n\r\n    public getAggregates(type: string) {\r\n        this.aggregatesToSelect = this.eventsToSelect.filter(f => f.aggregateType == type).map(m => m.aggregate);\r\n    }\r\n\r\n}\r\n"],"sourceRoot":""}