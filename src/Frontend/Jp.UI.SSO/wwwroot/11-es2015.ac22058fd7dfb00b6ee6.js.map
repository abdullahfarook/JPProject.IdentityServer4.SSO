{"version":3,"sources":["./src/app/panel/settings/emails/email-settings.component.html","./src/app/panel/settings/emails/email-settings.component.ts","./src/app/panel/settings/global-settings.service.ts","./src/app/panel/settings/ldap/ldap.component.html","./src/app/panel/settings/ldap/ldap.component.ts","./src/app/panel/settings/recaptcha/recaptcha.component.html","./src/app/panel/settings/recaptcha/recaptcha.component.ts","./src/app/panel/settings/settings.component.html","./src/app/panel/settings/settings.component.ts","./src/app/panel/settings/settings.module.ts","./src/app/panel/settings/storage/storage-settings.component.html","./src/app/panel/settings/storage/storage-settings.component.ts","./src/app/shared/viewModel/global-settings.model.ts","./src/app/shared/viewModel/recaptcha-settings.ts","./src/app/shared/viewModel/smtp.model.ts","./src/app/shared/viewModel/storage-settings.model.ts"],"names":[],"mappings":"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","file":"11-es2015.ac22058fd7dfb00b6ee6.js","sourcesContent":["<div class=\"card b\">\r\n    <div class=\"card-header bg-gray-lighter text-bold\">Emails</div>\r\n    <div class=\"card-body\">\r\n        <p>{{ 'settings.emails.description' | translate}}</p>\r\n        <!--Input - text -->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label placement=\"top\" [tooltip]=\"'settings.emails.server-tooltip' | translate\" class=\"col-xl-3 col-form-label\">{{ 'settings.emails.server' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-9 col-xs-12\">\r\n                    <input class=\"form-control\" autocomplete=\"on\" [placeholder]=\"'settings.emails.server-tooltip' | translate\" [(ngModel)]=\"settings.server.value\" />\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <!--Input - Number -->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-3 col-form-label\" placement=\"top\" [tooltip]=\"'settings.emails.port-tooltip' | translate\">{{\r\n                'settings.emails.port' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-9\">\r\n                    <input class=\"form-control\" [placeholder]=\"'settings.emails.port' | translate\" [(ngModel)]=\"settings.port.value\" numbersOnly />\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <!--Input - text -->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label placement=\"top\" [tooltip]=\"'settings.emails.username-tooltip' | translate\" class=\"col-xl-3 col-form-label\">{{ 'settings.emails.username' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-9\">\r\n                    <input class=\"form-control\" autocomplete=\"on\" [placeholder]=\"'settings.emails.username-tooltip' | translate\" [(ngModel)]=\"settings.username.value\" />\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <!--Input - text -->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label placement=\"top\" [tooltip]=\"'settings.emails.password-tooltip' | translate\" class=\"col-xl-3 col-form-label\">{{ 'settings.emails.password' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-9\">\r\n                    <input class=\"form-control\" autocomplete=\"on\" [placeholder]=\"'settings.emails.password-tooltip' | translate\" [(ngModel)]=\"settings.password.value\" />\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <!--Checkbox-->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'settings.emails.useSsl-tooltip' | translate\">{{ 'settings.emails.useSsl' | translate }}\r\n                <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-8\">\r\n                    <label class=\"switch m-0\">\r\n                    <input type=\"checkbox\" [(ngModel)]=\"useSsl\" (ngModelChange)=\"changeUseSsl()\" />\r\n                    <span></span>\r\n                </label>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class=\"card-body bt\">\r\n        <p>\r\n            <strong>Other options</strong>\r\n        </p>\r\n        <!--Checkbox-->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'settings.emails.sendEmail-tooltip' | translate\">{{\r\n            'settings.emails.sendEmail' | translate }}\r\n            <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-8\">\r\n                    <label class=\"switch m-0\">\r\n                <input type=\"checkbox\" [(ngModel)]=\"sendMail\" (ngModelChange)=\"changeSendEmail()\" />\r\n                <span></span>\r\n            </label>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <p>\r\n            <small class=\"text-muted\">* If you are not an Administrator, some fields will not show.</small>\r\n        </p>\r\n\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        <button class=\"btn btn-info\" (click)=\"updateSettings()\" type=\"button\">Update settings</button>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { TranslatorService } from '@core/translator/translator.service';\r\nimport { ProblemDetails } from '@shared/viewModel/default-response.model';\r\nimport { GlobalSettings } from '@shared/viewModel/global-settings.model';\r\nimport { SMTP } from '@shared/viewModel/smtp.model';\r\nimport { ToasterConfig, ToasterService } from 'angular2-toaster';\r\n\r\nimport { GlobalSettingsService } from '../global-settings.service';\r\n\r\n\r\n@Component({\r\n    selector: \"app-email-settings\",\r\n    templateUrl: \"./email-settings.component.html\",\r\n    styleUrls: [\"./email-settings.component.scss\"]\r\n})\r\nexport class EmailSettingsComponent implements OnInit {\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({\r\n        positionClass: 'toast-top-right',\r\n        showCloseButton: true,\r\n        timeout: 60000\r\n    });\r\n\r\n    showButtonLoading: boolean;\r\n\r\n    public settings: SMTP;\r\n\r\n    @Input()\r\n    public errors: Array<string>;\r\n\r\n    @Input()\r\n    public model: Array<GlobalSettings>;\r\n    sendMail: boolean;\r\n    useSsl: boolean;\r\n\r\n    constructor(\r\n        public translator: TranslatorService,\r\n        public toasterService: ToasterService,\r\n        private settingsServices: GlobalSettingsService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.settings = new SMTP();\r\n        this.settings.username = GlobalSettings.getSetting(this.model, \"Smtp:Username\");\r\n        this.settings.password = GlobalSettings.getSetting(this.model, \"Smtp:Password\");\r\n        this.settings.server = GlobalSettings.getSetting(this.model, \"Smtp:Server\");\r\n        this.settings.port = GlobalSettings.getSetting(this.model, \"Smtp:Port\");\r\n        this.settings.useSsl = GlobalSettings.getSetting(this.model, \"Smtp:UseSsl\");\r\n        this.settings.sendMail = GlobalSettings.getSetting(this.model, \"SendEmail\");\r\n\r\n        this.sendMail = this.settings.sendMail.value == \"true\";\r\n        this.useSsl = this.settings.useSsl.value == \"true\";\r\n    }\r\n\r\n    public updateSettings() {\r\n        this.errors.splice(0, this.errors.length);\r\n        let configurations = new Array<GlobalSettings>();\r\n        configurations.push(this.settings.username);\r\n        configurations.push(this.settings.password);\r\n        configurations.push(this.settings.sendMail);\r\n        configurations.push(this.settings.server);\r\n        configurations.push(this.settings.port);\r\n        configurations.push(this.settings.useSsl);\r\n        this.showButtonLoading = true;\r\n\r\n\r\n        this.settingsServices.update(configurations).subscribe(\r\n            () => {\r\n                this.showSuccessMessage();\r\n                this.showButtonLoading = false;\r\n            },\r\n            err => {\r\n                ProblemDetails.GetErrors(err).map(a => a.value).forEach(i => this.errors.push(i));\r\n                this.showButtonLoading = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    public showSuccessMessage() {\r\n        this.translator.translate.get('toasterMessages').subscribe(a => {\r\n            this.toasterService.pop(\"success\", a[\"title-success\"], a[\"message-success\"]);\r\n        });\r\n    }\r\n\r\n    public changeUseSsl() {\r\n        this.settings.useSsl.value = this.useSsl.toString();\r\n    }\r\n\r\n    public changeSendEmail() {\r\n        this.settings.sendMail.value = this.sendMail.toString();\r\n    }\r\n}\r\n","import { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { GlobalSettings } from '@shared/viewModel/global-settings.model';\r\nimport { LdapConnectionResult } from '@shared/viewModel/ldap.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class GlobalSettingsService {\r\n\r\n\r\n    endpoint: string;\r\n\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.endpoint = environment.ResourceServer + \"api/global-configuration\";\r\n    }\r\n\r\n\r\n    public getSettings(): Observable<Array<GlobalSettings>> {\r\n        return this.http.get<Array<GlobalSettings>>(`${this.endpoint}`);\r\n    }\r\n\r\n    public update(model: Array<GlobalSettings>) {\r\n        return this.http.put<void>(`${this.endpoint}`, model);\r\n    }\r\n\r\n    public testLdap(attributes: string, authType: string, distinguishedName: string, domainName: string, searchScope: string, address: string, portNumber: number, username: string, password: string) {\r\n        let params = new HttpParams()\r\n            .set('distinguishedName', distinguishedName)\r\n            .set('domainName', domainName)\r\n            .set('searchScope', searchScope)\r\n            .set('address', address)\r\n            .set('portNumber', portNumber.toString());\r\n\r\n        if (authType != null && authType != \"\")\r\n            params = params.set('authType', authType);\r\n        if (attributes != null && attributes != \"\")\r\n            params = params.set('attributes', attributes);\r\n        if (username != null && username != \"\")\r\n            params = params.set('username', username);\r\n        if (password != null && password != \"\")\r\n            params = params.set('password', password);\r\n\r\n        return this.http.get<LdapConnectionResult>(`${this.endpoint}/ldap-test`, { params });\r\n    }\r\n\r\n}\r\n","<div class=\"card b\">\r\n    <div class=\"card-header bg-gray-lighter text-bold\">LDAP</div>\r\n    <div class=\"card-body\" [formGroup]=\"settingsForms\">\r\n        <p>{{ 'settings.ldap.description' | translate}}</p>\r\n\r\n        <!--Input - text -->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'settings.ldap.address-tooltip' | translate\">{{ 'settings.ldap.address' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-8\">\r\n                    <input class=\"form-control\" [placeholder]=\"'settings.ldap.address-tooltip' | translate\" [formControl]=\"settingsForms.controls.address\" required/>\r\n                    <p>\r\n                        <small class=\"text-muted\">E.g: jpproject.net / Ip: 3.4.5.6</small>\r\n                    </p>\r\n                    <app-input-validation [control]=\"settingsForms.controls.address\" [errorMsgs]=\"getErrorMessages() | async\"></app-input-validation>\r\n                </div>\r\n\r\n            </div>\r\n        </fieldset>\r\n\r\n        <!--Input - text -->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'settings.ldap.domainName-tooltip' | translate\">{{ 'settings.ldap.domainName' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-8\">\r\n                    <input class=\"form-control\" [placeholder]=\"'settings.ldap.domainName-tooltip' | translate\" [formControl]=\"settingsForms.controls.domainName\" required/>\r\n                    <p>\r\n                        <small class=\"text-muted\">E.g: jpproject</small>\r\n                    </p>\r\n                    <app-input-validation [control]=\"settingsForms.controls.domainName\" [errorMsgs]=\"getErrorMessages() | async\"></app-input-validation>\r\n                </div>\r\n\r\n            </div>\r\n        </fieldset>\r\n\r\n        <!--Input - Number -->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'settings.ldap.portNumber-tooltip' | translate\">{{\r\n                'settings.ldap.portNumber' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-8\">\r\n                    <input class=\"form-control\" [placeholder]=\"'settings.ldap.portNumber-tooltip' | translate\" [formControl]=\"settingsForms.controls.portNumber\" numbersOnly />\r\n                    <app-input-validation [control]=\"settingsForms.controls.portNumber\" [errorMsgs]=\"getErrorMessages() | async\"></app-input-validation>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n\r\n        <!--Checkbox-->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'settings.ldap.fullyQualifiedDomainName-tooltip' | translate\">{{\r\n                'settings.ldap.fullyQualifiedDomainName' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-8\">\r\n                    <label class=\"switch m-0\">\r\n                    <input type=\"checkbox\" [formControl]=\"settingsForms.controls.fullyQualifiedDomainName\" />\r\n                    <span></span>\r\n                </label>\r\n                    <app-input-validation [control]=\"settingsForms.controls.fullyQualifiedDomainName\" [errorMsgs]=\"getErrorMessages() | async\"></app-input-validation>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n\r\n        <!--Checkbox-->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'settings.ldap.connectionless-tooltip' | translate\">{{\r\n                'settings.ldap.connectionless' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-8\">\r\n                    <label class=\"switch m-0\">\r\n                    <input type=\"checkbox\" [formControl]=\"settingsForms.controls.connectionLess\" />\r\n                    <span></span>\r\n                </label>\r\n                    <app-input-validation [control]=\"settingsForms.controls.connectionLess\" [errorMsgs]=\"getErrorMessages() | async\"></app-input-validation>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n\r\n        <!--Input - text -->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'settings.ldap.distinguishedName-tooltip' | translate\">{{ 'settings.ldap.distinguishedName' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-8\">\r\n                    <input class=\"form-control\" [placeholder]=\"'settings.ldap.distinguishedName-tooltip' | translate\" [formControl]=\"settingsForms.controls.distinguishedName\" required/>\r\n                    <p>\r\n                        <small class=\"text-muted\">E.g: dc=jpproject,dc=net</small>\r\n                    </p>\r\n                    <app-input-validation [control]=\"settingsForms.controls.distinguishedName\" [errorMsgs]=\"getErrorMessages() | async\"></app-input-validation>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n\r\n        <!--Select-->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'settings.ldap.searchScope-tooltip' | translate\">{{ 'settings.ldap.searchScope' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-8\">\r\n                    <ng-select [items]=\"searchScope\" [formControl]=\"settingsForms.controls.searchScope\" bindValue=\"id\" bindLabel=\"text\" [placeholder]=\"'settings.ldap.searchScope' | translate\"></ng-select>\r\n                    <app-input-validation [control]=\"settingsForms.controls.searchScope\" [errorMsgs]=\"getErrorMessages() | async\"></app-input-validation>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n\r\n        <!--Select-->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'settings.ldap.authType-tooltip' | translate\">{{ 'settings.ldap.authType' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-8\">\r\n                    <ng-select [items]=\"authType\" [formControl]=\"settingsForms.controls.authType\" bindValue=\"id\" bindLabel=\"text\" [placeholder]=\"'settings.ldap.authType' | translate\"></ng-select>\r\n                    <app-input-validation [control]=\"settingsForms.controls.authType\" [errorMsgs]=\"getErrorMessages() | async\"></app-input-validation>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n\r\n\r\n        <!--Select with tags-->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <div class=\"col-xl-4\">\r\n                    <label class=\"col-form-label\">{{ 'settings.ldap.attributes' | translate }} </label>&nbsp;\r\n                    <button type=\"button\" class=\"btn btn-xs btn-info\" [popover]=\"'settings.ldap.attributes-tooltip' | translate\" [popoverTitle]=\"'settings.ldap.attributes' | translate\" placement=\"auto\" container=\"body\" [adaptivePosition]=\"false\">\r\n                <i class=\"fa fa-comment-dots\" placement=\"top\"></i>\r\n            </button>\r\n                </div>\r\n                <div class=\"col-xl-8\">\r\n                    <tag-input theme='bootstrap' name=\"attributes\" [modelAsStrings]=\"true\" placeholder='+Attribute' [(ngModel)]=\"attributes\" [ngModelOptions]=\"{standalone: true}\"></tag-input>\r\n                </div>\r\n                <div class=\"col-xl-8 offset-4\">\r\n                    <small>Options:</small>\r\n                    <br>\r\n                    <button class=\"btn btn-oval btn-xs btn-info mb-1\" (click)=\"addAttribute('givenName')\" type=\"button\">First Name (givenName)&nbsp;&nbsp;<i class=\"fa fa-plus-circle\"></i></button>&nbsp;\r\n                    <button class=\"btn btn-oval btn-xs btn-info mb-1\" (click)=\"addAttribute('initials')\" type=\"button\">Initials&nbsp;&nbsp;<i class=\"fa fa-plus-circle\"></i></button>&nbsp;\r\n                    <button class=\"btn btn-oval btn-xs btn-info mb-1\" (click)=\"addAttribute('sn')\" type=\"button\">Last Name(sn)&nbsp;&nbsp;<i class=\"fa fa-plus-circle\"></i></button>&nbsp;\r\n                    <button class=\"btn btn-oval btn-xs btn-info mb-1\" (click)=\"addAttribute('displayName')\" type=\"button\">displayName&nbsp;&nbsp;<i class=\"fa fa-plus-circle\"></i></button>&nbsp;\r\n                    <button class=\"btn btn-oval btn-xs btn-info mb-1\" (click)=\"addAttribute('description')\" type=\"button\">Description&nbsp;&nbsp;<i class=\"fa fa-plus-circle\"></i></button>&nbsp;\r\n\r\n                    <button class=\"btn btn-oval btn-xs btn-info mb-1\" (click)=\"addAttribute('physicalDeliveryOfficeName')\" type=\"button\">Office&nbsp;&nbsp;<i class=\"fa fa-plus-circle\"></i></button>&nbsp;\r\n                    <button class=\"btn btn-oval btn-xs btn-info mb-1\" (click)=\"addAttribute('telephoneNumber')\" type=\"button\">Telephone Number&nbsp;&nbsp;<i class=\"fa fa-plus-circle\"></i></button>&nbsp;\r\n                    <button class=\"btn btn-oval btn-xs btn-info mb-1\" (click)=\"addAttribute('mail')\" type=\"button\">E-mail&nbsp;&nbsp;<i class=\"fa fa-plus-circle\"></i></button>&nbsp;\r\n                    <button class=\"btn btn-oval btn-xs btn-info mb-1\" (click)=\"addAttribute('cn')\" type=\"button\">Common Name(cn)&nbsp;&nbsp;<i class=\"fa fa-plus-circle\"></i></button>&nbsp;\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <hr>\r\n    <div class=\"card-body\">\r\n        <!--Input - text -->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label placement=\"top\" [tooltip]=\"'settings.ldap.username-tooltip' | translate\" class=\"col-xl-3 col-form-label\">{{ 'settings.ldap.username' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-9 col-xs-12\">\r\n                    <input class=\"form-control\" autocomplete=\"username\" [placeholder]=\"'settings.ldap.username-tooltip' | translate\" [(ngModel)]=\"username\" />\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <!--Input - text -->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label placement=\"top\" [tooltip]=\"'settings.ldap.password-tooltip' | translate\" class=\"col-xl-3 col-form-label\">{{ 'settings.ldap.password' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-9 col-xs-12\">\r\n                    <input class=\"form-control\" type=\"password\" autocomplete=\"current-password\" [placeholder]=\"'settings.ldap.password-tooltip' | translate\" [(ngModel)]=\"password\" />\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <button class=\"btn btn-outline-warning\" (click)=\"testConnection()\" type=\"button\">{{ 'settings.ldap.test' | translate}}</button>\r\n\r\n        <div *ngIf=\"showLdapTest\">\r\n            <!-- START card-->\r\n            <div class=\"card\">\r\n                <div class=\"card-body bg-danger text-center\" [ngClass]=\"{'bg-primary': runningLdapTest && ldapResult == null, 'bg-danger': ldapResult && !ldapResult.success, 'bg-success': ldapResult && ldapResult.success}\">\r\n                    <div class=\"d-flex\">\r\n                        <div>LDAP</div>\r\n                        <div class=\"ml-auto\">\r\n                            <span *ngIf=\"runningLdapTest\">{{ 'settings.ldap.running' | translate }}</span>\r\n                            <span *ngIf=\"!runningLdapTest\">{{ 'settings.ldap.run-done' | translate }}</span>\r\n                        </div>\r\n                    </div>\r\n                    <img class=\"img-thumbnail circle thumb96\" src=\"assets/img/server.png\" alt=\"Image\">\r\n                    <h4 class=\"mt-0\">{{'settings.ldap.connection-test' | translate}}</h4>\r\n                    <div class=\"progress progress-xs mb-3\" *ngIf=\"runningLdapTest\">\r\n                        <div class=\"progress-bar progress-bar-striped bg-info\" role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 100%;\">\r\n                            <span class=\"sr-only\">Wait</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- END card-->\r\n                <div class=\"card-body no-padding\" *ngIf=\"ldapResult\">\r\n                    <div class=\"list-group mb0\">\r\n                        <div class=\"list-group-item bt0\">\r\n                            <em class=\"fa-fw fas mr-2\" [ngClass]=\"{'fa-times text-danger': !ldapResult.success, 'fa-check text-success': ldapResult.success}\"></em>\r\n\r\n                            <span *ngIf=\"ldapResult.success\">{{ 'settings.ldap.success' | translate }}</span>\r\n                            <span *ngIf=\"!ldapResult.success\">{{ 'settings.ldap.error' | translate }}</span>\r\n                        </div>\r\n                        <div class=\"list-group-item\" *ngIf=\"!ldapResult.success\">\r\n                            <em class=\"fa-fw fa fa-list-alt mr-2\"></em>Step: {{ldapResult.step}}\r\n                        </div>\r\n                        <div class=\"list-group-item\" *ngIf=\"!ldapResult.success\">\r\n                            <em class=\"fa-fw fa fa-comment-alt mr-2\"></em>{{ldapResult.error}}\r\n                        </div>\r\n\r\n                        <div class=\"list-group-item\" *ngIf=\"ldapResult.success\">\r\n                            <em class=\"fa-fw fa fa-truck mr-2\"></em>Claims\r\n                            <ul class=\"list-group\">\r\n                                <li class=\"list-group-item list-group-item-accent-primary\" *ngFor=\"let item of ldapResult.claims\">\r\n                                    {{item.type}}: <strong>{{item.value}}</strong>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"card-body\">\r\n            <p>\r\n                <strong>Other options</strong>\r\n            </p>\r\n            <!--Checkbox-->\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'settings.ldap.useLdap-tooltip' | translate\">{{ 'settings.ldap.useLdap' | translate }}\r\n                <i class=\"fa fa-comment-dots\"></i></label>\r\n                    <div class=\"col-xl-8\">\r\n                        <label class=\"switch m-0\">\r\n                    <input type=\"checkbox\" [(ngModel)]=\"useLdap\" />\r\n                    <span></span>\r\n                </label>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <p>\r\n                <small class=\"text-muted\">* If you are not an Administrator, some fields will not show.</small>\r\n            </p>\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        <button class=\"btn btn-info\" (click)=\"updateSettings()\" type=\"button\">{{ 'settings.update' | translate }}</button>\r\n    </div>\r\n</div>","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslatorService } from '@core/translator/translator.service';\r\nimport { FormArray, FormControl, FormGroup, Validators } from '@ng-stack/forms';\r\nimport { UserService } from '@shared/services/user.service';\r\nimport { EqualToValidator, PasswordValidator } from '@shared/validators';\r\nimport { FormUtil } from '@shared/validators/form.utils';\r\nimport { AdminAddNewUser } from '@shared/viewModel/admin-add-new-user.model';\r\nimport { ProblemDetails } from '@shared/viewModel/default-response.model';\r\nimport { GlobalSettings } from '@shared/viewModel/global-settings.model';\r\nimport { Ldap, LdapConnectionResult } from '@shared/viewModel/ldap.model';\r\nimport { UserProfile } from '@shared/viewModel/userProfile.model';\r\nimport { ToasterConfig, ToasterService } from 'angular2-toaster';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { debounceTime, share, switchMap } from 'rxjs/operators';\r\nimport { isBoolean } from 'util';\r\n\r\nimport { GlobalSettingsService } from '../global-settings.service';\r\n\r\n\r\n@Component({\r\n    selector: \"app-ldap\",\r\n    templateUrl: \"./ldap.component.html\",\r\n    styleUrls: [\"./ldap.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LdapComponent implements OnInit {\r\n\r\n\r\n    @Input()\r\n    public errors: Array<string>;\r\n\r\n    @Input()\r\n    public model: Array<GlobalSettings>;\r\n\r\n    public attributes: string[];\r\n    authType: { id: string; text: string; }[];\r\n    searchScope: { id: string; text: string; }[];\r\n    public username: string;\r\n    public password: string;\r\n    public ldapResult: LdapConnectionResult;\r\n    public runningLdapTest: boolean = false;\r\n    public showLdapTest: boolean = false;\r\n\r\n    readonly settingsForms = new FormGroup<Ldap>({\r\n        address: new FormControl<string>(null, Validators.required),\r\n        domainName: new FormControl<string>(null, Validators.required),\r\n        distinguishedName: new FormControl<string>(null, Validators.required),\r\n        authType: new FormControl<string>(null, null),\r\n        searchScope: new FormControl<string>(null, Validators.required),\r\n        portNumber: new FormControl<number>({ value: 389, disabled: false }, [Validators.min(0), Validators.max(99999)]),\r\n        connectionLess: new FormControl<boolean>(null, Validators.required),\r\n        fullyQualifiedDomainName: new FormControl<boolean>(null, Validators.required)\r\n    });\r\n    useLdap: boolean;\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({\r\n        positionClass: 'toast-top-right',\r\n        showCloseButton: true\r\n    });\r\n    public bsConfig = {\r\n        containerClass: 'theme-angle'\r\n    };\r\n    public showButtonLoading: boolean = false;\r\n\r\n\r\n    constructor(\r\n        public translator: TranslatorService,\r\n        private settingsServices: GlobalSettingsService,\r\n        public toasterService: ToasterService) { }\r\n\r\n    public ngOnInit() {\r\n\r\n        this.runningLdapTest = true;\r\n\r\n\r\n        this.errors = [];\r\n        this.attributes = [];\r\n        this.showButtonLoading = false;\r\n\r\n        const attr = GlobalSettings.getSetting(this.model, \"Ldap:Attributes\").value;\r\n        if (attr.length > 0)\r\n            this.attributes = GlobalSettings.getSetting(this.model, \"Ldap:Attributes\").value.split(',').map(m => m.trim());\r\n\r\n        let content: Ldap = {\r\n            authType: GlobalSettings.getSetting(this.model, \"Ldap:AuthType\").value,\r\n            distinguishedName: GlobalSettings.getSetting(this.model, \"Ldap:DistinguishedName\").value,\r\n            domainName: GlobalSettings.getSetting(this.model, \"Ldap:DomainName\").value,\r\n            address: GlobalSettings.getSetting(this.model, \"Ldap:Address\").value,\r\n            searchScope: GlobalSettings.getSetting(this.model, \"Ldap:SearchScope\").value,\r\n            portNumber: parseInt(GlobalSettings.getSetting(this.model, \"Ldap:PortNumber\").value),\r\n            connectionLess: GlobalSettings.getSetting(this.model, \"Ldap:ConnectionLess\").value == 'true',\r\n            fullyQualifiedDomainName: GlobalSettings.getSetting(this.model, \"Ldap:FullyQualifiedDomainName\").value == 'true',\r\n        };\r\n        this.settingsForms.setValue(content);\r\n\r\n        this.useLdap = GlobalSettings.getSetting(this.model, \"LoginStrategy\").value == \"Ldap\";\r\n\r\n\r\n        this.authType = [\r\n            { id: \"\", text: \"Select\" },\r\n            { id: \"0\", text: \"Anonymous\" },\r\n            { id: \"1\", text: \"Basic\" },\r\n            { id: \"2\", text: \"Negotiate\" },\r\n            { id: \"3\", text: \"Ntlm\" },\r\n            { id: \"4\", text: \"Digest\" },\r\n            { id: \"5\", text: \"Sicily\" },\r\n            { id: \"6\", text: \"Dpa\" },\r\n            { id: \"7\", text: \"Msn\" },\r\n            { id: \"8\", text: \"External\" },\r\n            { id: \"9\", text: \"Kerberos\" }\r\n        ];\r\n        this.searchScope = [\r\n            { id: \"0\", text: \"Base\" },\r\n            { id: \"1\", text: \"One Level\" },\r\n            { id: \"2\", text: \"Subtree\" }\r\n        ];\r\n    }\r\n\r\n    public updateSettings() {\r\n\r\n        if (!this.validateForm(this.settingsForms)) {\r\n            return;\r\n        }\r\n\r\n        this.errors.splice(0, this.errors.length);\r\n        let configurations = new Array<GlobalSettings>();\r\n        if (this.attributes.length > 0)\r\n            configurations.push(GlobalSettings.updateSetting(this.model, \"Ldap:Attributes\", this.attributes.reduce((a, c) => a + ',' + c)));\r\n        else\r\n            configurations.push(GlobalSettings.updateSetting(this.model, \"Ldap:Attributes\", \"\"));\r\n\r\n        configurations.push(GlobalSettings.updateSetting(this.model, \"Ldap:AuthType\", this.settingsForms.value.authType));\r\n        configurations.push(GlobalSettings.updateSetting(this.model, \"Ldap:DistinguishedName\", this.settingsForms.value.distinguishedName));\r\n        configurations.push(GlobalSettings.updateSetting(this.model, \"Ldap:DomainName\", this.settingsForms.value.domainName));\r\n        configurations.push(GlobalSettings.updateSetting(this.model, \"Ldap:Address\", this.settingsForms.value.address));\r\n        configurations.push(GlobalSettings.updateSetting(this.model, \"Ldap:SearchScope\", this.settingsForms.value.searchScope));\r\n\r\n        configurations.push(GlobalSettings.updateSetting(this.model, \"Ldap:PortNumber\", this.settingsForms.value.portNumber.toString()));\r\n        configurations.push(GlobalSettings.updateSetting(this.model, \"Ldap:ConnectionLess\", this.settingsForms.value.connectionLess ? \"true\" : \"false\"));\r\n        configurations.push(GlobalSettings.updateSetting(this.model, \"Ldap:FullyQualifiedDomainName\", this.settingsForms.value.fullyQualifiedDomainName ? \"true\" : \"false\"));\r\n\r\n        configurations.push(GlobalSettings.updateSetting(this.model, \"LoginStrategy\", this.useLdap ? \"Ldap\" : \"Identity\"));\r\n\r\n        this.showButtonLoading = true;\r\n        this.errors = [];\r\n\r\n        this.settingsServices.update(configurations).subscribe(\r\n            () => {\r\n                this.showSuccessMessage();\r\n                this.showButtonLoading = false;\r\n            },\r\n            err => {\r\n                ProblemDetails.GetErrors(err).map(a => a.value).forEach(i => this.errors.push(i));\r\n                this.showButtonLoading = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    public testConnection() {\r\n        if (!this.validateForm(this.settingsForms)) {\r\n            return;\r\n        }\r\n        this.showLdapTest = true;\r\n        this.runningLdapTest = true;\r\n        this.showButtonLoading = true;\r\n        this.ldapResult = null;\r\n\r\n        this.errors.splice(0, this.errors.length);\r\n        let attributes = '';\r\n        if (this.attributes.length > 0)\r\n            attributes = this.attributes.reduce((a, c) => a + ',' + c);\r\n        const authType = this.settingsForms.value.authType;\r\n        const distinguishedName = this.settingsForms.value.distinguishedName;\r\n        const domainName = this.settingsForms.value.domainName;\r\n        const searchScope = this.settingsForms.value.searchScope;\r\n        const address = this.settingsForms.value.address;\r\n        const number = this.settingsForms.value.portNumber;\r\n        this.settingsServices.testLdap(attributes, authType, distinguishedName, domainName, searchScope, address, number, this.username, this.password).subscribe(\r\n            (data: LdapConnectionResult) => {\r\n                this.ldapResult = data;\r\n                this.showButtonLoading = false;\r\n                this.runningLdapTest = false;\r\n            },\r\n            err => {\r\n                ProblemDetails.GetErrors(err).map(a => a.value).forEach(i => this.errors.push(i));\r\n                this.showButtonLoading = false;\r\n                this.runningLdapTest = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    private validateForm(form) {\r\n        if (form.invalid) {\r\n            FormUtil.touchForm(form);\r\n            FormUtil.dirtyForm(form);\r\n\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public getErrorMessages(): Observable<any> {\r\n        return this.translator.translate.get('validations').pipe(share());\r\n    }\r\n\r\n    public showSuccessMessage() {\r\n        this.translator.translate.get('toasterMessages').subscribe(a => {\r\n            this.toasterService.pop(\"success\", a[\"title-success\"], a[\"message-success\"]);\r\n        });\r\n    }\r\n\r\n\r\n    public addAttribute(type: string) {\r\n        if (this.attributes.find(a => a == type) == null)\r\n            this.attributes.push(type);\r\n    }\r\n\r\n\r\n}\r\n","<div class=\"card b\">\r\n    <div class=\"card-header bg-gray-lighter text-bold\">ReCaptcha V3</div>\r\n    <div class=\"card-body\">\r\n        <p>{{ 'settings.recaptcha.description' | translate}}</p>\r\n        <!--Input - text -->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label placement=\"top\" [tooltip]=\"'settings.recaptcha.site-key-tooltip' | translate\" class=\"col-xl-3 col-form-label\">{{ 'settings.recaptcha.site-key' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-9 col-xs-12\">\r\n                    <input class=\"form-control\" autocomplete=\"on\" [placeholder]=\"'settings.recaptcha.site-key' | translate\" [(ngModel)]=\"settings.siteKey.value\" />\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <!--Input - text -->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label placement=\"top\" [tooltip]=\"'settings.recaptcha.private-key-tooltip' | translate\" class=\"col-xl-3 col-form-label\">{{ 'settings.recaptcha.private-key' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-9\">\r\n                    <input class=\"form-control\" autocomplete=\"on\" [placeholder]=\"'settings.recaptcha.private-key-tooltip' | translate\" [(ngModel)]=\"settings.privateKey.value\" />\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div class=\"card-body bt\">\r\n        <p>\r\n            <strong>Other options</strong>\r\n        </p>\r\n        <!--Checkbox-->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'settings.recaptcha.useRecaptcha-tooltip' | translate\">{{\r\n            'settings.recaptcha.useRecaptcha' | translate }}\r\n            <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-8\">\r\n                    <label class=\"switch m-0\">\r\n                <input type=\"checkbox\" [(ngModel)]=\"useRecaptcha\" (ngModelChange)=\"changeUseRecaptcha()\" />\r\n                <span></span>\r\n            </label>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <p>\r\n            <small class=\"text-muted\">* If you are not an Administrator, some fields will not show.</small>\r\n        </p>\r\n\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        <button class=\"btn btn-info\" (click)=\"updateSettings()\" type=\"button\">Update settings</button>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { TranslatorService } from '@core/translator/translator.service';\r\nimport { ProblemDetails } from '@shared/viewModel/default-response.model';\r\nimport { GlobalSettings } from '@shared/viewModel/global-settings.model';\r\nimport { RecaptchaSettings } from '@shared/viewModel/recaptcha-settings';\r\nimport { SMTP } from '@shared/viewModel/smtp.model';\r\nimport { ToasterConfig, ToasterService } from 'angular2-toaster';\r\n\r\nimport { GlobalSettingsService } from '../global-settings.service';\r\n\r\n\r\n@Component({\r\n    selector: \"app-recaptcha\",\r\n    templateUrl: \"./recaptcha.component.html\",\r\n    styleUrls: [\"./recaptcha.component.scss\"]\r\n})\r\nexport class RecaptchaSettingsComponent implements OnInit {\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({\r\n        positionClass: 'toast-top-right',\r\n        showCloseButton: true,\r\n        timeout: 60000\r\n    });\r\n\r\n    showButtonLoading: boolean;\r\n\r\n    public settings: RecaptchaSettings;\r\n\r\n    @Input()\r\n    public errors: Array<string>;\r\n\r\n    @Input()\r\n    public model: Array<GlobalSettings>;\r\n    useRecaptcha: boolean;\r\n\r\n    constructor(\r\n        public translator: TranslatorService,\r\n        public toasterService: ToasterService,\r\n        private settingsServices: GlobalSettingsService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.settings = new RecaptchaSettings();\r\n        this.settings.siteKey = GlobalSettings.getSetting(this.model, \"Recaptcha:SiteKey\");\r\n        this.settings.privateKey = GlobalSettings.getSetting(this.model, \"Recaptcha:PrivateKey\");\r\n        this.settings.useRecaptcha = GlobalSettings.getSetting(this.model, \"UseRecaptcha\");\r\n\r\n        this.useRecaptcha = this.settings.useRecaptcha.value == \"true\";\r\n    }\r\n\r\n\r\n    public updateSettings() {\r\n        this.errors.splice(0, this.errors.length);\r\n        let configurations = new Array<GlobalSettings>();\r\n        configurations.push(this.settings.siteKey);\r\n        configurations.push(this.settings.privateKey);\r\n        configurations.push(this.settings.useRecaptcha);\r\n        this.showButtonLoading = true;\r\n\r\n\r\n        this.settingsServices.update(configurations).subscribe(\r\n            () => {\r\n                this.showSuccessMessage();\r\n                this.showButtonLoading = false;\r\n            },\r\n            err => {\r\n                ProblemDetails.GetErrors(err).map(a => a.value).forEach(i => this.errors.push(i));\r\n                this.showButtonLoading = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    public showSuccessMessage() {\r\n        this.translator.translate.get('toasterMessages').subscribe(a => {\r\n            this.toasterService.pop(\"success\", a[\"title-success\"], a[\"message-success\"]);\r\n        });\r\n    }\r\n\r\n    public changeUseRecaptcha() {\r\n        this.settings.useRecaptcha.value = this.useRecaptcha.toString();\r\n    }\r\n}\r\n","<div class=\"content-heading\">\r\n    <div>\r\n        💻 {{ 'general.settings' | translate }}\r\n        <small><b> {{ 'settings.description' | translate }}</b></small>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"errors.length > 0\">\r\n    <alert type=\"danger\">\r\n        <div *ngFor=\"let error of errors; let i = index\"><strong>{{i+1}}</strong> {{error}}</div>\r\n    </alert>\r\n</div>\r\n\r\n<div class=\"container-lg\">\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-3\">\r\n            <div class=\"card b\">\r\n                <div class=\"card-header bg-gray-lighter text-bold\">SSO Settings</div>\r\n                <div class=\"list-group\">\r\n                    <a href=\"#\" class=\"list-group-item\" (click)=\"settingSection=1\" [ngClass]=\"{'active': (settingSection == 1)}\">Emails</a>\r\n                    <a href=\"#\" class=\"list-group-item\" (click)=\"settingSection=2\" [ngClass]=\"{'active': (settingSection == 2)}\">Storage</a>\r\n                    <a href=\"#\" class=\"list-group-item\" (click)=\"settingSection=3\" [ngClass]=\"{'active': (settingSection == 3)}\">Recaptcha</a>\r\n                    <a href=\"#\" class=\"list-group-item\" (click)=\"settingSection=4\" [ngClass]=\"{'active': (settingSection == 4)}\">LDAP</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-9\">\r\n            <div *ngIf=\"settingSection == 1\">\r\n                <app-email-settings *ngIf=\"settings.length\" [model]=\"settings\" [(errors)]=\"errors\"></app-email-settings>\r\n            </div>\r\n            <div *ngIf=\"settingSection == 2\">\r\n                <app-storage-settings *ngIf=\"settings.length\" [model]=\"settings\" [(errors)]=\"errors\"></app-storage-settings>\r\n            </div>\r\n            <div *ngIf=\"settingSection == 3\">\r\n                <app-recaptcha *ngIf=\"settings.length\" [model]=\"settings\" [(errors)]=\"errors\"></app-recaptcha>\r\n            </div>\r\n            <div *ngIf=\"settingSection == 4\">\r\n                <app-ldap *ngIf=\"settings.length\" [model]=\"settings\" [(errors)]=\"errors\"></app-ldap>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<toaster-container [toasterconfig]=\"toasterconfig\"></toaster-container>","import { Component, OnInit } from '@angular/core';\r\nimport { TranslatorService } from '@core/translator/translator.service';\r\nimport { GlobalSettings } from '@shared/viewModel/global-settings.model';\r\nimport { ToasterConfig, ToasterService } from 'angular2-toaster';\r\n\r\nimport { GlobalSettingsService } from './global-settings.service';\r\n\r\n\r\n@Component({\r\n    selector: \"app-settings\",\r\n    templateUrl: \"./settings.component.html\",\r\n    styleUrls: [\"./settings.component.scss\"],\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({\r\n        positionClass: 'toast-top-right',\r\n        showCloseButton: true,\r\n        timeout: 60000\r\n    });\r\n\r\n    showButtonLoading: boolean;\r\n\r\n    public errors: Array<string>;\r\n\r\n    settingSection = 1;\r\n    public settings: Array<GlobalSettings>;\r\n\r\n    constructor(\r\n        public translator: TranslatorService,\r\n        public toasterService: ToasterService,\r\n        private settingsServices: GlobalSettingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.errors = [];\r\n        this.settings = [];\r\n        this.settingsServices.getSettings().subscribe(s => this.settings = s);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { InputValidationComponent } from '@shared/components/input-validation/input-validation';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ToasterModule } from 'angular2-toaster';\r\nimport { TagInputModule } from 'ngx-chips';\r\n\r\nimport { EmailSettingsComponent } from './emails/email-settings.component';\r\nimport { GlobalSettingsService } from './global-settings.service';\r\nimport { LdapComponent } from './ldap/ldap.component';\r\nimport { RecaptchaSettingsComponent } from './recaptcha/recaptcha.component';\r\nimport { SettingsComponent } from './settings.component';\r\nimport { StorageSettingsComponent } from './storage/storage-settings.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: \"\", component: SettingsComponent },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        ToasterModule.forRoot(),\r\n        RouterModule.forChild(routes),\r\n        TagInputModule\r\n    ],\r\n    declarations: [\r\n        SettingsComponent,\r\n        EmailSettingsComponent,\r\n        StorageSettingsComponent,\r\n        RecaptchaSettingsComponent,\r\n        LdapComponent\r\n    ],\r\n    providers: [\r\n        GlobalSettingsService\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class SettingsModule { }\r\n","<div class=\"card b\">\r\n    <div class=\"card-header bg-gray-lighter text-bold\">Storage</div>\r\n    <div class=\"card-body\">\r\n        <p>{{ 'settings.storage.description' | translate}}</p>\r\n\r\n        <tabset>\r\n            <!-- Azure Settings -->\r\n            <tab [heading]=\"'settings.storage.azure' | translate\" [active]=\"settings.service.value == 'Azure'\" (select)=\"changeTab('Azure')\">\r\n                <p>{{ 'settings.storage.azure-description' | translate}}</p>\r\n                <!--Input - text -->\r\n                <fieldset>\r\n                    <div class=\"form-group row\">\r\n                        <label placement=\"top\" [tooltip]=\"'settings.storage.username-tooltip' | translate\" class=\"col-xl-3 col-form-label\">{{ 'settings.storage.username' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                        <div class=\"col-xl-9\">\r\n                            <input class=\"form-control\" autocomplete=\"on\" [placeholder]=\"'settings.storage.username-tooltip' | translate\" [(ngModel)]=\"settings.username.value\" />\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n                <!--Input - text -->\r\n                <fieldset>\r\n                    <div class=\"form-group row\">\r\n                        <label placement=\"top\" [tooltip]=\"'settings.storage.password-tooltip' | translate\" class=\"col-xl-3 col-form-label\">{{ 'settings.storage.password' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                        <div class=\"col-xl-9\">\r\n                            <input class=\"form-control\" autocomplete=\"on\" [placeholder]=\"'settings.storage.password-tooltip' | translate\" [(ngModel)]=\"settings.password.value\" />\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n            </tab>\r\n\r\n            <!-- Amazon S3 Settings -->\r\n            <tab [heading]=\"'settings.storage.s3' | translate\" [active]=\"settings.service.value == 'S3'\" (select)=\"changeTab('S3')\">\r\n                <p>{{ 'settings.storage.s3-description' | translate}}</p>\r\n                <!--Input - text -->\r\n                <fieldset>\r\n                    <div class=\"form-group row\">\r\n                        <label placement=\"top\" [tooltip]=\"'settings.storage.username-tooltip' | translate\" class=\"col-xl-3 col-form-label\">{{ 'settings.storage.username' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                        <div class=\"col-xl-9\">\r\n                            <input class=\"form-control\" autocomplete=\"on\" [placeholder]=\"'settings.storage.username-tooltip' | translate\" [(ngModel)]=\"settings.username.value\" />\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n                <!--Input - text -->\r\n                <fieldset>\r\n                    <div class=\"form-group row\">\r\n                        <label placement=\"top\" [tooltip]=\"'settings.storage.password-tooltip' | translate\" class=\"col-xl-3 col-form-label\">{{ 'settings.storage.password' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                        <div class=\"col-xl-9\">\r\n                            <input class=\"form-control\" autocomplete=\"on\" [placeholder]=\"'settings.storage.password-tooltip' | translate\" [(ngModel)]=\"settings.password.value\" />\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <!--Input - text -->\r\n                <fieldset>\r\n                    <div class=\"form-group row\">\r\n                        <label placement=\"top\" [tooltip]=\"'settings.storage.bucket-tooltip' | translate\" class=\"col-xl-3 col-form-label\">{{ 'settings.storage.bucket' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                        <div class=\"col-xl-9\">\r\n                            <input class=\"form-control\" autocomplete=\"on\" [placeholder]=\"'settings.storage.bucket-tooltip' | translate\" [(ngModel)]=\"settings.storageName.value\" />\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n            </tab>\r\n\r\n            <!-- Local (Filesystem) storage service (It doesn't mean Brower storage) -->\r\n            <tab [heading]=\"'settings.storage.local' | translate\" [active]=\"settings.service.value == 'Local'\" (select)=\"changeTab('Local')\">\r\n                <p>{{ 'settings.storage.local-description' | translate}}</p>\r\n                <!--Input - text -->\r\n                <fieldset>\r\n                    <div class=\"form-group row\">\r\n                        <label placement=\"top\" [tooltip]=\"'settings.storage.virtualPath-tooltip' | translate\" class=\"col-xl-3 col-form-label\">{{ 'settings.storage.virtualPath' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                        <div class=\"col-xl-9\">\r\n                            <input class=\"form-control\" [placeholder]=\"'settings.storage.virtualPath-tooltip' | translate\" [(ngModel)]=\"settings.virtualPath.value\" />\r\n                            <small class=\"text-muted\">{{settings.basePath.value + settings.virtualPath.value}}</small>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n                <!--Input - text -->\r\n                <fieldset>\r\n                    <div class=\"form-group row\">\r\n                        <label placement=\"top\" [tooltip]=\"'settings.storage.basePath-tooltip' | translate\" class=\"col-xl-3 col-form-label\">{{ 'settings.storage.basePath' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                        <div class=\"col-xl-9\">\r\n                            <input class=\"form-control\" [placeholder]=\"'settings.storage.basePath-tooltip' | translate\" [(ngModel)]=\"settings.basePath.value\" />\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <!--Input - text -->\r\n                <fieldset>\r\n                    <div class=\"form-group row\">\r\n                        <label placement=\"top\" [tooltip]=\"'settings.storage.physicalPath-tooltip' | translate\" class=\"col-xl-3 col-form-label\">{{ 'settings.storage.physicalPath' | translate }} <i class=\"fa fa-comment-dots\"></i></label>\r\n                        <div class=\"col-xl-9\">\r\n                            <input class=\"form-control\" [placeholder]=\"'settings.storage.physicalPath-tooltip' | translate\" [(ngModel)]=\"settings.physicalPath.value\" />\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n            </tab>\r\n\r\n        </tabset>\r\n\r\n    </div>\r\n    <div class=\"card-body bt\">\r\n        <p>\r\n            <strong>Other options</strong>\r\n        </p>\r\n        <!--Checkbox-->\r\n        <fieldset>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-xl-4 col-form-label\" placement=\"top\" [tooltip]=\"'settings.storage.useStorage-tooltip' | translate\">{{ 'settings.storage.useStorage' | translate }}\r\n            <i class=\"fa fa-comment-dots\"></i></label>\r\n                <div class=\"col-xl-8\">\r\n                    <label class=\"switch m-0\">\r\n                <input type=\"checkbox\" [(ngModel)]=\"useStorage\" (ngModelChange)=\"changeStorage()\" />\r\n                <span></span>\r\n            </label>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <p>\r\n            <small class=\"text-muted\">* If you are not an Administrator, some fields will not show.</small>\r\n        </p>\r\n\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        <button class=\"btn btn-info\" (click)=\"updateSettings()\" type=\"button\">Update settings</button>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { TranslatorService } from '@core/translator/translator.service';\r\nimport { ProblemDetails } from '@shared/viewModel/default-response.model';\r\nimport { GlobalSettings } from '@shared/viewModel/global-settings.model';\r\nimport { SMTP } from '@shared/viewModel/smtp.model';\r\nimport { StorageSettings } from '@shared/viewModel/storage-settings.model';\r\nimport { ToasterConfig, ToasterService } from 'angular2-toaster';\r\n\r\nimport { GlobalSettingsService } from '../global-settings.service';\r\n\r\n\r\n@Component({\r\n    selector: \"app-storage-settings\",\r\n    templateUrl: \"./storage-settings.component.html\",\r\n    styleUrls: [\"./storage-settings.component.scss\"]\r\n})\r\nexport class StorageSettingsComponent implements OnInit {\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({\r\n        positionClass: 'toast-top-right',\r\n        showCloseButton: true,\r\n        timeout: 60000\r\n    });\r\n\r\n    showButtonLoading: boolean;\r\n\r\n    public settings: StorageSettings;\r\n\r\n    @Input()\r\n    public errors: Array<string>;\r\n\r\n    @Input()\r\n    public model: Array<GlobalSettings>;\r\n    useStorage: boolean;\r\n\r\n    constructor(\r\n        public translator: TranslatorService,\r\n        public toasterService: ToasterService,\r\n        private settingsServices: GlobalSettingsService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.settings = new StorageSettings();\r\n        this.settings.username = GlobalSettings.getSetting(this.model, \"Storage:Username\");\r\n        this.settings.password = GlobalSettings.getSetting(this.model, \"Storage:Password\");\r\n        this.settings.service = GlobalSettings.getSetting(this.model, \"Storage:Service\");\r\n        this.settings.virtualPath = GlobalSettings.getSetting(this.model, \"Storage:VirtualPath\");\r\n        this.settings.useStorage = GlobalSettings.getSetting(this.model, \"UseStorage\");\r\n        this.settings.basePath = GlobalSettings.getSetting(this.model, \"Storage:BasePath\");\r\n        this.settings.storageName = GlobalSettings.getSetting(this.model, \"Storage:StorageName\");\r\n        this.settings.physicalPath = GlobalSettings.getSetting(this.model, \"Storage:PhysicalPath\");\r\n\r\n        this.useStorage = this.settings.useStorage.value == \"true\";\r\n    }\r\n\r\n    public updateSettings() {\r\n        this.errors.splice(0, this.errors.length);\r\n        let configurations = new Array<GlobalSettings>();\r\n\r\n        configurations.push(this.settings.service);\r\n        configurations.push(this.settings.useStorage);\r\n\r\n        if (this.settings.service.value === \"S3\") {\r\n            configurations.push(this.settings.username);\r\n            configurations.push(this.settings.password);\r\n            configurations.push(this.settings.storageName);\r\n        }\r\n        if (this.settings.service.value === \"Azure\") {\r\n            configurations.push(this.settings.username);\r\n            configurations.push(this.settings.password);\r\n        }\r\n        if (this.settings.service.value === \"Local\") {\r\n            configurations.push(this.settings.virtualPath);\r\n            configurations.push(this.settings.basePath);\r\n        }\r\n\r\n        this.showButtonLoading = true;\r\n\r\n\r\n        this.settingsServices.update(configurations).subscribe(\r\n            () => {\r\n                this.showSuccessMessage();\r\n                this.showButtonLoading = false;\r\n            },\r\n            err => {\r\n                ProblemDetails.GetErrors(err).map(a => a.value).forEach(i => this.errors.push(i));\r\n                this.showButtonLoading = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    public showSuccessMessage() {\r\n        this.translator.translate.get('toasterMessages').subscribe(a => {\r\n            this.toasterService.pop(\"success\", a[\"title-success\"], a[\"message-success\"]);\r\n        });\r\n    }\r\n\r\n    public changeStorage() {\r\n        this.settings.useStorage.value = this.useStorage.toString();\r\n    }\r\n    public changeTab(tabName: string) {\r\n        this.settings.service.value = tabName;\r\n    }\r\n}\r\n","export class GlobalSettings {\r\n    key: string;\r\n    value: string;\r\n    isPublic: boolean;\r\n    isSensitive: boolean;\r\n\r\n    public static getSetting(model: Array<GlobalSettings>, key: string): GlobalSettings {\r\n        let item = model.find(f => f.key === key);\r\n        if (item.value == null)\r\n            item.value = \"\";\r\n\r\n        return item;\r\n    }\r\n\r\n    public static updateSetting(model: Array<GlobalSettings>, key: string, value: string): GlobalSettings {\r\n        let item = model.find(f => f.key === key);\r\n        if (item != null)\r\n            item.value = value;\r\n\r\n        return item;\r\n    }\r\n}","import { GlobalSettings } from './global-settings.model';\r\n\r\nexport class RecaptchaSettings {\r\n    siteKey: GlobalSettings;\r\n    privateKey: GlobalSettings;\r\n    useRecaptcha: GlobalSettings;\r\n}\r\n","import { GlobalSettings } from './global-settings.model';\r\n\r\nexport class SMTP {\r\n    server: GlobalSettings;\r\n    password: GlobalSettings;\r\n    username: GlobalSettings;\r\n    port: GlobalSettings;\r\n    useSsl: GlobalSettings;\r\n    sendMail: GlobalSettings;\r\n}","import { GlobalSettings } from './global-settings.model';\r\n\r\nexport class StorageSettings {\r\n    service: GlobalSettings;\r\n    virtualPath: GlobalSettings;\r\n    username: GlobalSettings;\r\n    password: GlobalSettings;\r\n    storageName: GlobalSettings;\r\n    basePath: GlobalSettings;\r\n    useStorage: GlobalSettings;\r\n    physicalPath: GlobalSettings;\r\n}"],"sourceRoot":""}